(roleattribute fstools_role)

(block fstools
	(blockinherit app_blk)

	(roleattributeset fstools_role sys.role)

	(roletype fstools_role subj)

	(blockinherit file_runtime_obj_blk)

	(allow subj self (capability (sys_admin sys_rawio dac_override)))
	(allow subj self (process (setfscreate)))

	(call sys_get_sysvipc_info (subj))
	(call sys_request_load_module (subj))

	(call dev_read_random (subj))
	(call dev_read_urandom (subj))
	(call dev_rw_loop_control (subj))
	(call dev_rw_lvm_control (subj))

	(call fs_getattr_debugfs_fs (subj))
	(call fs_list_devtmpfs (subj))
	(call fs_mount_tracefs_fs (subj))
	(call fs_read_debugfs (subj))
	(call fs_read_devtmpfs_lnk_files (subj))
	(call fs_read_sysfs (subj))
	(call fs_read_tracefs (subj))

	(call file_read_data_files (subj))
	(call file_read_config (subj))

	(call file_manage_lost_found (subj))
	(call file_mountpoint_obj_type_transition_lost_found (subj))

	(call storage_manage_all (subj))

	(call storage_devtmpfs_obj_type_transition_fixed_disk (subj))
	(call storage_devtmpfs_obj_type_transition_removable (subj))

	(call miscfile_read_all_terminfo (subj))
	(call miscfile_read_locale (subj))

	(call fstools_exec (subj))

	(call fstools_manage_runtime (subj))
	(call fstools_runtime_obj_type_transition_runtime (subj))

	(call mount_read_runtime_files (subj))

	(call seutil_read_default_context_files (subj))
	(call seutil_read_file_context_files (subj))
	(call seutil_read_selinux_config_files (subj))

	(optional fstools_optional_mount
		(booleanif (mount_any_file) (true
			(call file_rw_all_files_except (subj)))))

	(optional fstools_optional_sd_fsck
		(call sd_fsck_manage_runtime (subj))
		(call sd_fsck_runtime_obj_type_transition_runtime (subj)))

	(optional fstools_optional_sd_machined
		(call sd_machined_rw_var_lib_files (subj)))

	(optional fstools_optional_myqemu
		(call myqemu_rw_all_virt_obj_files (subj)))

	(optional fstools_optional_rpm
		(call rpm_rw_inherited_fifo_files (fstools_t))
		(call rpm_rw_inherited_tmp_fifo_files (fstools_t))
		(call rpm_rw_inherited_tmpfs_files (fstools_t)))

	(optional fstools_optional_sd
		(call sd_daemon (subj cmd_file)))

	(optional fstools_optional_sd_udevd
		(call sd_udevd_client_subj_type (subj))))
