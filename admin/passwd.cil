;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Contexts
;

(in passwd
	(filecon "/usr/bin/passwd" file cmd_file_context))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Macros
;

(in passwd
	(block subj_blk
		(blockabstract subj_blk)

		(blockinherit app.application_subj_blk)

		(typeattributeset passwd.subj_type_attribute subj)

		(blockinherit subj.send_signal_blk)

		(macro auto_subj_type_transition ((type ARG1))
			(call passwd.spec_auto_subj_type_transition (ARG1
				subj)))

		(macro role_pattern ((role ARG1)(type ARG2))
			(call passwd.role_pattern (ARG1 ARG2 subj))))

	(blockinherit exec_blk)

	(blockinherit subj.send_signal_all_blk)

	(macro application_subj_type ((type ARG1))
		(call app.application_subj_type (ARG1))
		(typeattributeset subj_type_attribute ARG1))

	(macro role_pattern ((role ARG1)(type ARG2)(type ARG3))
		(call auto_subj_type_transition_pattern (ARG2 cmd_file ARG3))

		(roletype ARG1 ARG3)

		(allow ARG2 ARG3 (process (signal)))

		(allow ARG3 ARG2 (process (signal)))

		(call chkpwd.run (ARG3 ARG1)))

	(macro spec_auto_subj_type_transition ((type ARG1)(type ARG2))
		(allow ARG1 ARG2 (process (signal)))
		(call auto_subj_type_transition_pattern (ARG1 cmd_file ARG2))))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Policy
;

(block passwd
	(typeattribute subj_type_attribute)

	(blockinherit app.application_cmd_obj_blk)

	(call subj.entry (subj_type_attribute cmd_file))

	(allow subj_type_attribute self (capability (setuid dac_override chown
		fsetid)))
	(allow subj_type_attribute self create_netlink_selinux_socket_perms)
	(allow subj_type_attribute self rw_fifo_file_perms)

	(call sys.audit_client_subj_type (subj_type_attribute))
	(call sys.read_crypto_sysctl_files (subj_type_attribute))

	(call standard.obj_sys_change_exemption_subj_type
		(subj_type_attribute))

	(call dev.read_urandom (subj_type_attribute))

	(call file.read_config_files (subj_type_attribute))
	(call file.read_data_files (subj_type_attribute))

	(call fs.list_devtmpfs (subj_type_attribute))
	(call fs.search_devpts (subj_type_attribute))

	(call sec.compute_access_vector (subj_type_attribute))
	(call sec.list_fs (subj_type_attribute))
	(call sec.setfscreate_subj_type (subj_type_attribute))

	(call passwords.manage (subj_type_attribute))
	(call shadow.manage (subj_type_attribute))
	(call locale.client_subj_type (subj_type_attribute))
	(call utmp.read_runtime_files (subj_type_attribute))

	(call nss.client_subj_type (subj_type_attribute))

	(call pam.read_config (subj_type_attribute))

	(call usersubj.read_inherited_tmpfs_user_files (subj_type_attribute))

	(optional passwd_subj_type_optional_sd_journald
		(call sd_journald.client_subj_type (subj_type_attribute))))
