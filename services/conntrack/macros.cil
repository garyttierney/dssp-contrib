(in conntrack
	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit run_blk)

	(blockinherit subj.send_signal_blk))

(in conntrackd
	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit run_blk)

	(blockinherit subj.send_signal_blk)

	(blockinherit file.search_config_blk)
	(blockinherit file.list_config_blk)
	(blockinherit file.read_config_files_blk)
	(blockinherit file.read_config_lnk_files_blk)
	(blockinherit file.read_config_blk)
	(blockinherit file.manage_config_blk)
	(blockinherit file.relabel_config_blk)

	(blockinherit file.read_var_log_files_blk)
	(blockinherit file.manage_var_log_files_blk)
	(blockinherit file.relabel_var_log_files_blk)

	(macro var_log_obj_type_transition_var_log ((type ARG1))
		(call file.var_log_obj_type_transition (ARG1 var_log_file file "conntrackd.log")))

	(blockinherit file.read_runtime_sock_files_blk)
	(blockinherit file.manage_runtime_sock_files_blk)
	(blockinherit file.relabel_runtime_sock_files_blk)

	(macro runtime_obj_type_transition_runtime ((type ARG1))
		(call file.runtime_obj_type_transition (ARG1 runtime_file sock_file "conntrackd.ctl")))

	(blockinherit file.read_runtime_lock_files_blk)
	(blockinherit file.manage_runtime_lock_files_blk)
	(blockinherit file.relabel_runtime_lock_files_blk)

	(macro runtime_lock_obj_type_transition_runtime_lock ((type ARG1))
		(call file.runtime_lock_obj_type_transition (ARG1 runtime_lock_file file "conntrack.lock")))

	(macro stream_connect ((type ARG1))
		(call file.search_runtime (ARG1))
		(call stream_connect_pattern (ARG1 runtime_file runtime_file subj)))

	(blockinherit net.udp_bind_port_blk)

	(macro adm ((type ARG1)(role ARG2))
		(typeattributeset adm_subj_type_attribute ARG1)
		(optional conntrack_adm_optional_sd
			(call sd.daemon_adm_subj_type (ARG1)))
		(optional conntrack_adm_optional_sd_askpwd
			(call sd_askpwd_agent.run (ARG1 ARG2)))))

(in nfct
	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit run_blk)

	(blockinherit subj.send_signal_blk))
