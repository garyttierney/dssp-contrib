;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Contexts
;

(in lircd
	(filecon "/etc/lirc(/.*)?" any config_file_context)
	(filecon "/usr/sbin/lircd" file cmd_file_context)
	(filecon "/var/run/lirc(/.*)?" any runtime_file_context)

	(optional lircd_unit_optional_sd
		(filecon "/usr/lib/systemd/system/[^/]*lircd.*" file
			unit_file_context)))

(in lircmd
	(filecon "/usr/sbin/lircmd" file cmd_file_context)

	(optional lircmd_unit_optional_sd
		(filecon "/usr/lib/systemd/system/[^/]*lircmd.*" file
			unit_file_context)))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Macros
;

(in lircd
	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit subj.send_signal_blk)

	(blockinherit file.search_config_blk)
	(blockinherit file.list_config_blk)
	(blockinherit file.read_config_files_blk)
	(blockinherit file.read_config_lnk_files_blk)
	(blockinherit file.read_config_blk)
	(blockinherit file.manage_config_blk)
	(blockinherit file.relabel_config_blk)

	(blockinherit file.search_runtime_blk)
	(blockinherit file.list_runtime_blk)
	(blockinherit file.read_runtime_files_blk)
	(blockinherit file.read_runtime_lnk_files_blk)
	(blockinherit file.read_runtime_sock_files_blk)
	(blockinherit file.read_runtime_blk)
	(blockinherit file.manage_runtime_blk)
	(blockinherit file.relabel_runtime_blk)

	(macro runtime_obj_type_transition_runtime ((type ARG1))
		(call file.runtime_obj_type_transition (ARG1 runtime_file dir
			"lirc")))

	(macro stream_connect ((type ARG1))
		(call file.search_runtime (ARG1))
		(call stream_connect_pattern (ARG1 runtime_file runtime_file
			subj)))

	(macro adm ((type ARG1)(role ARG2))
		(typeattributeset adm_subj_type_attribute ARG1)
		(optional lircd_adm_optional_sd
			(call sd.daemon_adm_subj_type (ARG1)))
		(optional lircd_adm_optional_sd_askpwd
			(call sd_askpwd_agent.run (ARG1 ARG2)))))

(in lircmd
	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit subj.send_signal_blk))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Policy
;

(block lircd
	(typeattribute adm_subj_type_attribute)
	(typeattribute subj_type_attribute)

	(typeattribute obj_type_attribute)

	(blockinherit subj.common_subj_blk)

	(typeattributeset subj_type_attribute subj)

	(blockinherit cmd.obj_blk)

	(call subj.entry (subj cmd_file))

	(roletype sys.role subj)

	(blockinherit file.config_obj_blk)

	(typeattributeset obj_type_attribute config_file)

	(call read_config (subj))

	(blockinherit file.runtime_obj_blk)

	(typeattributeset obj_type_attribute runtime_file)

	(call manage_runtime (subj))
	(call runtime_obj_type_transition_runtime (subj))

	(optional lircd_optional_sd
		(call sd.daemon (subj cmd_file))

		(blockinherit sd.unit_obj_blk)

		(typeattributeset obj_type_attribute unit_file)

		(allow adm_subj_type_attribute unit_file (service (stop status
			disable enable reload start))))

	(allow adm_subj_type_attribute subj_type_attribute (process (ptrace
		signal signull sigkill sigstop)))
	(call ps_subj_pattern (adm_subj_type_attribute subj_type_attribute))

	(call file.search_runtime (adm_subj_type_attribute))

	(allow adm_subj_type_attribute obj_type_attribute manage_file_perms)
	(allow adm_subj_type_attribute obj_type_attribute manage_dir_perms)
	(allow adm_subj_type_attribute obj_type_attribute
		manage_lnk_file_perms)
	(allow adm_subj_type_attribute obj_type_attribute
		manage_sock_file_perms)

	(allow adm_subj_type_attribute obj_type_attribute relabel_file_perms)
	(allow adm_subj_type_attribute obj_type_attribute relabel_dir_perms)
	(allow adm_subj_type_attribute obj_type_attribute
		relabel_lnk_file_perms)
	(allow adm_subj_type_attribute obj_type_attribute
		relabel_sock_file_perms))

(block lircmd
	(blockinherit subj.common_subj_blk)

	(typeattributeset lircd.subj_type_attribute subj)

	(blockinherit cmd.obj_blk)

	(call subj.entry (subj cmd_file))

	(roletype sys.role subj)

	(optional lircmd_optional_sd
		(call sd.daemon (subj cmd_file))

		(blockinherit sd.unit_obj_blk)

		(typeattributeset lircd.obj_type_attribute unit_file)

		(allow lircd.adm_subj_type_attribute unit_file (service (stop
			status disable enable reload start)))))
