;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Contexts
;

(in xwayland
	(filecon "/usr/bin/Xwayland" file cmd_file_context))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Macros
;

(in xwayland
	(block subj_blk
		(blockabstract subj_blk)

		(blockinherit app.application_subj_blk)

		(typeattributeset xwayland.subj_type_attribute subj)

		(blockinherit subj.send_sigkill_blk)

		(macro role ((role ARG1))
			(call xwayland.roletype_pattern (ARG1 subj)))

		(macro auto_subj_type_transition ((type ARG1))
			(call xwayland.spec_auto_subj_type_transition (ARG1
				subj))))

	(macro client_subj_type ((type ARG1))
		(typeattributeset client_subj_type_attribute ARG1))

	(macro shared_client_subj_type ((type ARG1))
		(typeattributeset shared_client_subj_type_attribute ARG1))

	(macro shared_client_tmpfs_obj_type ((type ARG1))
		(typeattributeset shared_client_tmpfs_obj_type_attribute ARG1))

	(macro shared_client ((type ARG1)(type ARG2))
		(call shared_client_subj_type (ARG1))
		(call shared_client_tmpfs_obj_type (ARG2)))

	(macro compositor_subj_type ((type ARG1))
		(typeattributeset compositor_subj_type_attribute ARG1))

	(macro compositor_tmpfs_obj_type ((type ARG1))
		(typeattributeset compositor_tmpfs_obj_type_attribute ARG1))

	(macro compositor ((type ARG1)(type ARG2))
		(call compositor_subj_type (ARG1))
		(call compositor_tmpfs_obj_type (ARG2)))

	(blockinherit exec_blk)

	(blockinherit subj.send_signal_blk)
	(blockinherit subj.use_fd_all_blk)
	(blockinherit subj.send_sigchld_all_blk)

	(macro read_inherited_fifo_files_all_subj ((type ARG1))
		(call use_fd_all_subj (ARG1))
		(allow ARG1 subj_type_attribute (fifo_file (getattr read))))

	(macro spec_read_inherited_fifo_files ((type ARG1)(type ARG2))
		(allow ARG1 ARG2 (fd (use)))
		(allow ARG1 ARG2 (fifo_file (getattr read))))

	(macro application_subj_type ((type ARG1))
		(call app.application_subj_type (ARG1))
		(typeattributeset subj_type_attribute ARG1))

	(macro roletype_pattern ((role ARG1)(type ARG2))
		(roletype ARG1 ARG2))

	(macro spec_auto_subj_type_transition ((type ARG1)(type ARG2))
		(allow ARG1 ARG2 (process (signal)))
		(call auto_subj_type_transition_pattern (ARG1 cmd_file ARG2)))

	(macro stream_connect_compositor ((type ARG1))
		(call file.search_runtime_user (ARG1))
		(call fs.search_tmpfs (ARG1))
		(call stream_connect_pattern (ARG1 tmpfs_user_file
			tmpfs_user_file compositor_subj_type_attribute)))

	(blockinherit usersubj.search_tmpfs_user_blk)
	(blockinherit usersubj.list_tmpfs_user_blk)
	(blockinherit usersubj.read_tmpfs_user_files_blk)
	(blockinherit usersubj.manage_tmpfs_user_files_blk)
	(blockinherit usersubj.read_tmpfs_user_lnk_files_blk)
	(blockinherit usersubj.read_tmpfs_user_blk)
	(blockinherit usersubj.manage_tmpfs_user_sock_files_blk)
	(blockinherit usersubj.manage_tmpfs_user_blk)
	(blockinherit usersubj.relabel_tmpfs_user_blk)

	(macro tmpfs_obj_type_transition_tmpfs_files ((type ARG1))
		(call file.search_runtime_user (ARG1))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file file
			"*"))))

	(macro tmpfs_obj_type_transition_tmpfs ((type ARG1))
		(call file.search_runtime_user (ARG1))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file
			sock_file "wayland-0"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file file
			"wayland-0.lock"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file
			sock_file "wayland-1"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file file
			"wayland-1.lock"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file
			sock_file "wayland-2"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file file
			"wayland-2.lock"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file
			sock_file "wayland-3"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file file
			"wayland-3.lock"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file
			sock_file "wayland-4"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file file
			"wayland-4.lock"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file
			sock_file "wayland-5"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file file
			"wayland-5.lock"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file
			sock_file "wayland-6"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file file
			"wayland-6.lock"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file
			sock_file "wayland-7"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file file
			"wayland-7.lock"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file
			sock_file "wayland-8"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file file
			"wayland-8.lock"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file
			sock_file "wayland-9"))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file file
			"wayland-9.lock")))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Policy
;

(block xwayland
	(typeattribute client_subj_type_attribute)
	(typeattribute shared_client_subj_type_attribute)
	(typeattribute shared_client_tmpfs_obj_type_attribute)
	(typeattribute compositor_subj_type_attribute)
	(typeattribute compositor_tmpfs_obj_type_attribute)
	(typeattribute subj_type_attribute)

	(blockinherit app.application_cmd_obj_blk)

	(call subj.entry (subj_type_attribute cmd_file))

	(blockinherit usersubj.tmpfs_user_obj_blk)

	(call manage_tmpfs_user (subj_type_attribute))
	(call tmpfs_obj_type_transition_tmpfs_files (subj_type_attribute))

	(allow subj_type_attribute self (unix_stream_socket (listen)))
	(allow subj_type_attribute self rw_fifo_file_perms)

	(call sys.read_cpu_online_sysfs_files (subj_type_attribute))

	(call dev.rw_dri (subj_type_attribute))

	(call file.read_config_files (subj_type_attribute))
	(call file.read_data_files (subj_type_attribute))

	(call fs.read_sysfs (subj_type_attribute))
	(call fs.rw_inherited_tmpfs_files (subj_type_attribute))

	(call sec.search_fs (subj_type_attribute))

	(call fonts.read_data (subj_type_attribute))
	(call passwords.read (subj_type_attribute))

	(call nss.read_config_files (subj_type_attribute))

	(call default_context.read_config_files (subj_type_attribute))
	(call selinux_config.read_config_files (subj_type_attribute))

	(call udev.client_subj_type (subj_type_attribute))

	(call xserver.read_config (subj_type_attribute))
	(call xserver.read_var_lib (subj_type_attribute))

	(call xutil.delete_tmpfs_user_files (subj_type_attribute))
	(call xutil.read_tmpfs_user_files (subj_type_attribute))

	(allow subj_type_attribute compositor_subj_type_attribute (fd (use)))
	(allow subj_type_attribute compositor_subj_type_attribute
		(unix_stream_socket (accept read getattr write getopt
			shutdown)))

	(allow subj_type_attribute client_subj_type_attribute list_dir_perms)
	(allow subj_type_attribute client_subj_type_attribute read_file_perms)
	(allow subj_type_attribute client_subj_type_attribute
		read_lnk_file_perms)

	(call xserver.rw_inherited_tmpfs_client_files (subj_type_attribute))
	(call xserver.rw_shm_tmpfs_client_subj (subj_type_attribute))

	(allow client_subj_type_attribute compositor_subj_type_attribute (fd
		(use)))
	(allow client_subj_type_attribute compositor_tmpfs_obj_type_attribute
		(file (read write)))

	(call file.read_data (client_subj_type_attribute))

	(call file.search_runtime_user (client_subj_type_attribute))
	(call fs.search_tmpfs (client_subj_type_attribute))

	(call stream_connect_compositor (client_subj_type_attribute))

	(call client_subj_type (shared_client_subj_type_attribute))

	(allow shared_client_subj_type_attribute client_subj_type_attribute
		(fd (use)))
	(allow shared_client_subj_type_attribute client_subj_type_attribute
		(fifo_file (write)))

	(allow client_subj_type_attribute shared_client_subj_type_attribute
		(fd (use)))
	(allow client_subj_type_attribute shared_client_subj_type_attribute
		(fifo_file (write)))

	(call manage_tmpfs_user (compositor_subj_type_attribute))
	(call tmpfs_obj_type_transition_tmpfs (compositor_subj_type_attribute))

	(call xserver.rw_inherited_fifo_files_tmpfs_client_subj
		(compositor_subj_type_attribute))
	(call xserver.rw_inherited_tmpfs_client_files
		(compositor_subj_type_attribute))

	(allow compositor_subj_type_attribute
		shared_client_subj_type_attribute (fd (use)))
	(allow compositor_subj_type_attribute
		shared_client_tmpfs_obj_type_attribute (file (read write)))

	(optional xwayland_client_subj_type_optional_dconf
		(call dconf.client_subj_type (client_subj_type_attribute))))
