;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Contexts
;

(in nginx
	(block nginx
		(filecon "/usr/sbin/nginx" file cmd_file_context)
		(filecon "/etc/nginx(/.*)?" any config_file_context)
		(filecon "/var/run/nginx\.pid" file runtime_file_context)
		(filecon "/var/lib/nginx(/.*)?" any var_lib_file_context)
		(filecon "/var/log/nginx(/.*)?" any var_log_file_context)

		(optional nginx_unit_optional_sd
			(filecon "/usr/lib/systemd/system/[^/]*nginx.*" file
				unit_file_context))))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Macros
;

(block nginx_blk
	(blockabstract nginx_blk)

	(block nginx
		(typeattribute adm_subj_type_attribute)

		(typeattribute subj_type_attribute)

		(typeattribute obj_type_attribute)

		(typeattribute config_obj_type_attribute)
		(typeattribute exec_obj_type_attribute)
		(typeattribute port_obj_type_attribute)
		(typeattribute runtime_obj_type_attribute)
		(typeattribute unit_obj_type_attribute)
		(typeattribute var_lib_obj_type_attribute)
		(typeattribute var_log_obj_type_attribute)

		(typeattributeset .nginx.adm_subj_type_attribute
			adm_subj_type_attribute)

		(typeattributeset .nginx.obj_type_attribute obj_type_attribute)

		(typeattributeset .nginx.config_obj_type_attribute
			config_obj_type_attribute)
		(typeattributeset .nginx.exec_obj_type_attribute
			exec_obj_type_attribute)
		(typeattributeset .nginx.port_obj_type_attribute
			port_obj_type_attribute)
		(typeattributeset .nginx.runtime_obj_type_attribute
			runtime_obj_type_attribute)
		(typeattributeset .nginx.unit_obj_type_attribute
			unit_obj_type_attribute)
		(typeattributeset .nginx.var_lib_obj_type_attribute
			var_lib_obj_type_attribute)
		(typeattributeset .nginx.var_log_obj_type_attribute
			var_log_obj_type_attribute)

		(blockinherit subj.common_subj_blk)

		(typeattributeset subj_type_attribute subj)

		(typeattributeset .nginx.subj_type_attribute
			subj_type_attribute)

		(blockinherit cmd.obj_blk)

		(typeattributeset exec_obj_type_attribute cmd_file)

		(call subj.entry (subj cmd_file))

		(roletype sys.role subj)

		(blockinherit net.unreserved_port_obj_blk)

		(typeattributeset port_obj_type_attribute port)

		(allow subj port (tcp_socket (name_bind)))

		(blockinherit file.config_obj_blk)

		(typeattributeset obj_type_attribute config_file)
		(typeattributeset config_obj_type_attribute config_file)

		(allow subj config_file read_file_perms)
		(allow subj config_file list_dir_perms)
		(allow subj config_file read_lnk_file_perms)

		(blockinherit file.runtime_obj_blk)

		(typeattributeset obj_type_attribute runtime_file)
		(typeattributeset runtime_obj_type_attribute runtime_file)

		(allow subj runtime_file manage_file_perms)

		(call file.runtime_obj_type_transition (subj runtime_file file
			"*"))

		(blockinherit file.var_lib_obj_blk)

		(typeattributeset obj_type_attribute var_lib_file)
		(typeattributeset var_lib_obj_type_attribute var_lib_file)

		(allow subj var_lib_file manage_dir_perms)
		(allow subj var_lib_file manage_file_perms)

		(call file.var_lib_obj_type_transition (subj var_lib_file dir
			"*"))

		(blockinherit file.var_log_obj_blk)

		(typeattributeset obj_type_attribute var_log_file)
		(typeattributeset var_log_obj_type_attribute var_log_file)

		(allow subj var_log_file manage_dir_perms)
		(allow subj var_log_file (file (setattr rename)))
		(allow subj var_log_file append_file_perms)
		(allow subj var_log_file create_file_perms)
		(allow subj var_log_file delete_file_perms)
		(allow subj var_log_file read_file_perms)

		(call file.var_log_obj_type_transition (subj var_log_file dir
			"*"))

		(optional nginx_blk_optional_sd
			(call sd.daemon (subj cmd_file))

			(blockinherit sd.unit_obj_blk)

			(typeattributeset obj_type_attribute unit_file)
			(typeattributeset unit_obj_type_attribute unit_file)

			(allow adm_subj_type_attribute unit_file (service
				(stop status disable enable reload start))))

		(allow adm_subj_type_attribute subj_type_attribute (process
			(ptrace signal signull sigkill sigstop)))
		(call ps_subj_pattern (adm_subj_type_attribute
			subj_type_attribute))

		(call file.rw_config_dirs (adm_subj_type_attribute))
		(call file.rw_runtime_dirs (adm_subj_type_attribute))
		(call file.rw_var_lib_dirs (adm_subj_type_attribute))
		(call file.rw_var_log_dirs (adm_subj_type_attribute))

		(allow adm_subj_type_attribute obj_type_attribute
			manage_dir_perms)
		(allow adm_subj_type_attribute obj_type_attribute
			manage_file_perms)
		(allow adm_subj_type_attribute obj_type_attribute
			manage_lnk_file_perms)
		(allow adm_subj_type_attribute obj_type_attribute
			manage_sock_file_perms)

		(allow adm_subj_type_attribute obj_type_attribute
			relabel_dir_perms)
		(allow adm_subj_type_attribute obj_type_attribute
			relabel_file_perms)
		(allow adm_subj_type_attribute obj_type_attribute
			relabel_lnk_file_perms)
		(allow adm_subj_type_attribute obj_type_attribute
			relabel_sock_file_perms)

		(blockinherit exec_blk)

		(blockinherit auto_subj_type_transition_blk)

		(blockinherit subj.send_signal_blk)

		(blockinherit subj.rw_inherited_unix_stream_sockets_blk)

		(macro rw_unix_stream_stream_sockets ((type ARG1))
			(allow ARG1 subj rw_unix_stream_stream_socket_perms))

		(blockinherit net.tcp_connect_port_blk)
		(blockinherit net.tcp_bind_port_blk)

		(blockinherit file.search_config_blk)
		(blockinherit file.list_config_blk)
		(blockinherit file.read_config_files_blk)
		(blockinherit file.read_config_lnk_files_blk)
		(blockinherit file.read_config_blk)
		(blockinherit file.manage_config_blk)
		(blockinherit file.relabel_config_blk)

		(blockinherit file.read_runtime_files_blk)

		(blockinherit file.search_var_lib_blk)
		(blockinherit file.list_var_lib_blk)
		(blockinherit file.read_var_lib_files_blk)
		(blockinherit file.read_var_lib_lnk_files_blk)
		(blockinherit file.read_var_lib_blk)
		(blockinherit file.manage_var_lib_blk)
		(blockinherit file.relabel_var_lib_blk)

		(macro append_var_log_files ((type ARG1))
			(call search_var_log (ARG1))
			(allow ARG1 var_log_file append_file_perms))

		(blockinherit file.search_var_log_blk)
		(blockinherit file.list_var_log_blk)
		(blockinherit file.read_var_log_files_blk)
		(blockinherit file.read_var_log_lnk_files_blk)
		(blockinherit file.read_var_log_blk)
		(blockinherit file.manage_var_log_blk)
		(blockinherit file.relabel_var_log_blk)

		(macro adm ((type ARG1)(role ARG2))
			(typeattributeset adm_subj_type_attribute ARG1)
			(optional nginx_adm_optional_sd
				(call sd.daemon_adm_subj_type (ARG1)))
			(optional nginx_adm_optional_sd_askpwd
				(call sd_askpwd_agent.run (ARG1 ARG2))))))

(in nginx
	(macro exec_all ((type ARG1))
		(call can_exec (ARG1 exec_obj_type_attribute)))

	(macro control_all_sd_unit_subj_type ((type ARG1))
		(typeattributeset control_all_sd_unit_subj_type_attribute
			ARG1))

	(blockinherit net.tcp_connect_all_ports_blk)
	(blockinherit net.tcp_bind_all_ports_blk)

	(blockinherit file.search_all_config_blk)
	(blockinherit file.list_all_config_blk)
	(blockinherit file.read_all_config_files_blk)
	(blockinherit file.read_all_config_lnk_files_blk)
	(blockinherit file.read_all_config_blk)
	(blockinherit file.manage_all_config_blk)
	(blockinherit file.relabel_all_config_blk)

	(blockinherit file.read_all_runtime_files_blk)

	(blockinherit file.search_all_var_lib_blk)
	(blockinherit file.list_all_var_lib_blk)
	(blockinherit file.read_all_var_lib_files_blk)
	(blockinherit file.read_all_var_lib_lnk_files_blk)
	(blockinherit file.read_all_var_lib_blk)
	(blockinherit file.manage_all_var_lib_blk)
	(blockinherit file.relabel_all_var_lib_blk)

	(blockinherit file.search_all_var_log_blk)
	(blockinherit file.list_all_var_log_blk)
	(blockinherit file.read_all_var_log_files_blk)
	(blockinherit file.read_all_var_log_lnk_files_blk)
	(blockinherit file.read_all_var_log_blk)
	(blockinherit file.manage_all_var_log_blk)
	(blockinherit file.relabel_all_var_log_blk)

	(macro append_all_var_log_files ((type ARG1))
		(call search_all_var_log (ARG1))
		(allow ARG1 var_log_obj_type_attribute append_file_perms))

	(macro adm ((type ARG1)(role ARG2))
		(typeattributeset nginx.adm_subj_type_attribute ARG1)
		(optional nginx_adm_optional_sd
			(call sd.daemon_adm_subj_type (ARG1)))
		(optional nginx_adm_optional_sd_askpwd
			(call sd_askpwd_agent.run (ARG1 ARG2)))))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Policy
;

(block nginx
	(typeattribute control_all_sd_unit_subj_type_attribute)

	(typeattribute adm_subj_type_attribute)

	(typeattribute subj_type_attribute)

	(typeattribute obj_type_attribute)
	(typeattribute exec_obj_type_attribute)
	(typeattribute unit_obj_type_attribute)
	(typeattribute config_obj_type_attribute)
	(typeattribute port_obj_type_attribute)
	(typeattribute runtime_obj_type_attribute)
	(typeattribute var_lib_obj_type_attribute)
	(typeattribute var_log_obj_type_attribute)

	(blockinherit nginx_blk)

	(allow subj_type_attribute self (capability (chown dac_override setuid
		setgid)))
	(allow subj_type_attribute self (tcp_socket (listen accept)))

	(call sys.read_cpuinfo_proc_files (subj_type_attribute))
	(call sys.read_cpu_sysfs_files (subj_type_attribute))
	(call sys.read_cpu_online_sysfs_files (subj_type_attribute))
	(call sys.read_kernel_sysctl_files (subj_type_attribute))

	(call dev.read_urandom (subj_type_attribute))

	(call file.read_config_files (subj_type_attribute))
	(call file.read_data_files (subj_type_attribute))

	(call net.tcp_bind_generic_node (subj_type_attribute))

	(call cert.read (subj_type_attribute))
	(call locale.read (subj_type_attribute))

	(call http.tcp_bind_reserved_port (nginx.subj))
	(call http_alt.tcp_bind_port (nginx.subj))
	(call http_alt.tcp_connect_port (nginx.subj))

	(call nss.client_subj_type (subj_type_attribute))

	(call usersubj.search_home_dir (subj_type_attribute))

	(call web_content_cgi.search_all (nginx.subj))

	(call web_content_htaccess.read_all_files (nginx.subj))

	(call web_content_ra.list_all (nginx.subj))
	(call web_content_ra.append_all_files (nginx.subj))
	(call web_content_ra.read_all_files (nginx.subj))

	(call web_content_ro.list_all (nginx.subj))
	(call web_content_ro.read_all_files (nginx.subj))
	(call web_content_ro.read_all_lnk_files (nginx.subj))

	(call web_content_rw.manage_all (nginx.subj))

	(call web_content.cgi_client_subj (nginx.subj))

	(call web_sys.web_content_rw.tmpfs_obj_type_transition_web_content_rw
		(nginx.subj))

	(optional nginx_optional_logrotate
		(call logrotate.client_subj_type (subj_type_attribute))
		(call logrotate.client_runtime_obj_type
			(runtime_obj_type_attribute))
		(call logrotate.client_var_log_obj_type
			(var_log_obj_type_attribute)))

	(optional nginx_optional_sd
		(call sd.daemon_pid_obj_type (runtime_obj_type_attribute))
		(call sd.tcp_socket_activated_subj_type (subj_type_attribute))

		(call sd.reload (control_all_sd_unit_subj_type_attribute))
		(allow control_all_sd_unit_subj_type_attribute
			unit_obj_type_attribute (service (start status stop
				reload enable disable))))

	(optional nginx_optional_php_fpm
		(call php_fpm.php_fpm.stream_connect (nginx.subj))))

(allow nginx.adm_subj_type_attribute nginx.subj_type_attribute (process
	(ptrace signal signull sigkill sigstop)))
(call ps_subj_pattern (nginx.adm_subj_type_attribute
	nginx.subj_type_attribute))

(call file.rw_config_dirs (nginx.adm_subj_type_attribute))
(call file.rw_runtime_dirs (nginx.adm_subj_type_attribute))
(call file.rw_var_lib_dirs (nginx.adm_subj_type_attribute))
(call file.rw_var_log_dirs (nginx.adm_subj_type_attribute))

(allow nginx.adm_subj_type_attribute nginx.obj_type_attribute manage_dir_perms)
(allow nginx.adm_subj_type_attribute nginx.obj_type_attribute
	manage_file_perms)
(allow nginx.adm_subj_type_attribute nginx.obj_type_attribute
	manage_lnk_file_perms)
(allow nginx.adm_subj_type_attribute nginx.obj_type_attribute
	manage_sock_file_perms)

(allow nginx.adm_subj_type_attribute nginx.obj_type_attribute
	relabel_dir_perms)
(allow nginx.adm_subj_type_attribute nginx.obj_type_attribute
	relabel_file_perms)
(allow nginx.adm_subj_type_attribute nginx.obj_type_attribute
	relabel_lnk_file_perms)
(allow nginx.adm_subj_type_attribute nginx.obj_type_attribute
	relabel_sock_file_perms)

(optional nginx_adm_subj_type_optional_sd
	(allow nginx.adm_subj_type_attribute nginx.unit_obj_type_attribute
		(service (stop status disable enable reload start))))
