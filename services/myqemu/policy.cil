(block myqemu
	(typeattribute adm_subj_type_attribute)
	(typeattribute subj_type_attribute)

	(typeattribute obj_type_attribute)

	(allow adm_subj_type_attribute subj_type_attribute (process (ptrace signal signull sigkill sigstop)))
	(call ps_subj_pattern (adm_subj_type_attribute subj_type_attribute))

	(call file.search_runtime_user (adm_subj_type_attribute))
	(call fs.search_tmpfs (adm_subj_type_attribute))

	(allow adm_subj_type_attribute obj_type_attribute manage_file_perms)

	(allow subj_type_attribute obj_type_attribute relabel_file_perms))

(block myqemu_runner
	(roleattribute role_attribute)

	(blockinherit app.application_blk)

	(typeattributeset myqemu.subj_type_attribute subj)

	(roleattributeset role_attribute sys.role)

	(roletype role_attribute subj)

	(allow subj self (capability (dac_override)))
	(allow subj self (process (setexec)))
	(allow subj self rw_fifo_file_perms)

	(call standard.obj_change_exemption_subj_type (subj))

	(call cmd.exec (subj))
	(call cmd.audit_read_access_shell_files (subj))

	(call sec.validate_context (subj))

	(call locale.read (subj))

	(call nss.client_subj_type (subj))

	(call qemu_guest.relabel_all_files (subj))
	(call qemu_guest.run_all (subj role_attribute))

	(call setfiles.exec (subj))

	(optional mqemu_runner_optional_sd
		(call sd.daemon (subj cmd_file))

		(blockinherit sd.unit_obj_blk)

		(typeattributeset myqemu.obj_type_attribute unit_file)

		(allow myqemu.adm_subj_type_attribute unit_file (service (stop status disable enable reload start))))

	(optional myqemu_runner_optional_sd_machined
		(call sd_machined.relabelfrom_var_lib_files (subj))))

(block myqemu_installer
	(roleattribute role_attribute)

	(blockinherit app.application_blk)

	(typeattributeset myqemu.subj_type_attribute subj)

	(roletype role_attribute subj)

	(blockinherit qemu_guest.pty_obj_blk)

	(call use_ptys (subj))

	(blockinherit usersubj.tmpfs_user_obj_blk)

	(typeattributeset myqemu.obj_type_attribute tmpfs_user_file)

	(call manage_tmpfs_user_files (subj))
	(call tmpfs_obj_type_transition_tmpfs (subj))

	(allow subj self (capability (net_admin dac_override)))
	(allow subj self (process (getsched)))
	(allow subj self rw_fifo_file_perms)

	(call sys.read_cpu_sysfs (subj))
	(call sys.read_cpuinfo_proc_files (subj))
	(call sys.read_crypto_sysctl_files (subj))
	(call sys.read_node_sysfs (subj))
	(call sys.read_net_proc_files (subj))

	(call cmd.audit_read_access_shell_files (subj))
	(call cmd.exec (subj))
	(call cmd.list_cmd (subj))

	(call dev.read_urandom (subj))
	(call dev.rw_kvm (subj))

	(call file.read_data (subj))
	(call file.read_config_files (subj))

	(call fs.getattr_fs (subj))
	(call fs.getattr_tmpfs_fs (subj))

	(call term.create_pty (subj pty_dev))

	(call curl.exec (subj))
	(call curl.read_config_files (subj))

	(call fpaste.exec (subj))

	(call http.tcp_connect_port (subj))

	(call cert.read (subj))
	(call locale.read (subj))

	(call nss.client_subj_type (subj))

	(call openssl.exec (subj))
	(call openssl.manage_home_user_files (subj))
	(call openssl.home_dir_obj_type_transition_home (subj))

	(call qemu.exec (subj))
	(call qemu.read_config (subj))

	(call qemu_guest.manage_files (subj))

	(call usersubj.manage_home_user_files (subj))
	(call usersubj.home_dir_obj_type_transition_home_user_files (subj))
	(call usersubj.search_home_data (subj))

	(optional myqemu_installer_optional_httpd
		(call httpd.tcp_connect_all_ports (subj)))

	(optional myqemu_installer_optional_sd_machined
		(call sd_machined.manage_var_lib_files (subj))))

(block myqemu_shutdown
	(roleattribute role_attribute)

	(blockinherit app.application_blk)

	(roleattributeset role_attribute sys.role)

	(roletype role_attribute subj)

	(typeattributeset myqemu.subj_type_attribute subj)

	(allow subj self rw_fifo_file_perms)

	(call cmd.exec (subj))
	(call cmd.audit_read_access_shell_files (subj))

	(call locale.read (subj))

	(call nss.client_subj_type (subj))

	(call qemu_guest.stream_connect_all_subj (subj))
	(call qemu_guest.manage_all_runtime_sock_files (subj))

	(optional mqemu_shutdown_optional_sd
		(call sd.daemon (subj cmd_file))))
