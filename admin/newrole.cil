;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Contexts
;

(in newrole
	(filecon "/usr/bin/newrole" file cmd_file_context))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Macros
;

(in newrole
	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit run_blk)

	(blockinherit subj.send_signal_blk))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Policy
;

(block newrole
	(roleattribute role_attribute)

	(blockinherit app.application_blk)

	(roletype role_attribute subj)

	(allow subj self (capability (dac_override)))
	(allow subj self (process (setcap)))
	(allow subj self rw_fifo_file_perms)

	(call sys.read_kernel_sysctl_files (subj))

	(call standard.obj_change_exemption_subj_type (subj))
	(call standard.role_change_exemption_subj_type (subj))

	(call dev.read_urandom (subj))

	(call file.read_config_files (subj))

	(call fs.getattr_fs (subj))
	(call fs.list_devtmpfs (subj))

	(call sec.validate_context (subj))
	(call sec.compute_access_vector (subj))
	(call sec.compute_create_context (subj))
	(call sec.compute_relabel_context (subj))
	(call sec.compute_user_contexts (subj))

	(call subj.interactive_fd_subj_type (subj))

	(call locale.client_subj_type (subj))

	(call pam.client_subj_type (subj))

	(call selinux_config.read_config_files (subj))
	(call default_context.read_config_files (subj))

	(call usersubj.relabel_term (subj))
	(call usersubj.search_home_dir (subj))
	(call usersubj.shell_manual_subj_type_transition_common_subj (subj))
	(call usersubj.use_term (subj)))
