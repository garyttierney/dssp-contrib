;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Contexts
;

(in xrdp
	(portcon "tcp" 3389 port_obj_context)
	(portcon "udp" 3389 port_obj_context)

	(filecon "/usr/sbin/xrdp" file cmd_file_context)
	(filecon "/etc/xrdp(/.*)?" any config_file_context)
	(filecon "/etc/sysconfig/xrdp" file config_file_context)
	(filecon "/var/log/xrdp\.log.*" any var_log_file_context)
	(filecon "/usr/share/xrdp(/.*)?" any data_file_context)

	(optional xrdp_unit_optional_sd
		(filecon "/usr/lib/systemd/system/[^/]*xrdp.*" file
			unit_file_context)))

(in xrdpsesman
	(portcon "tcp" 3350 port_obj_context)
	(portcon "udp" 3350 port_obj_context)

	(filecon "/usr/sbin/xrdp-sesman" file cmd_file_context)
	(filecon "/var/log/xrdp-sesman\.log.*" any var_log_file_context)

	(optional xrdpsesman_unit_optional_sd
		(filecon "/usr/lib/systemd/system/[^/]*xrdp-sesman.*" file
			unit_file_context)))

(in xrdpchansrv
	(filecon "/usr/sbin/xrdp-chansrv" file cmd_file_context)
	(filecon "HOME_DIR/xrdp-chansrv\.log" file home_user_file_context))

(in xrdpsessvc
	(filecon "/usr/sbin/xrdp-sessvc" file cmd_file_context))

(in xrdpstartwm
	(filecon "/etc/xrdp/startwm\.sh" file cmd_file_context)
	(filecon "/etc/xrdp/startwm-bash\.sh" file cmd_file_context))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Macros
;

(in xrdp
	(blockinherit net.tcp_bind_port_blk)
	(blockinherit net.tcp_connect_port_blk)

	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit subj.send_signal_blk)

	(blockinherit file.search_config_blk)
	(blockinherit file.list_config_blk)
	(blockinherit file.read_config_files_blk)
	(blockinherit file.read_config_lnk_files_blk)
	(blockinherit file.read_config_blk)
	(blockinherit file.manage_config_blk)
	(blockinherit file.relabel_config_blk)

	(blockinherit file.search_data_blk)
	(blockinherit file.list_data_blk)
	(blockinherit file.read_data_files_blk)
	(blockinherit file.manage_data_files_blk)
	(blockinherit file.read_data_lnk_files_blk)
	(blockinherit file.read_data_blk)
	(blockinherit file.manage_data_blk)
	(blockinherit file.relabel_data_blk)

	(blockinherit file.search_tmpfs_blk)
	(blockinherit file.list_tmpfs_blk)
	(blockinherit file.read_tmpfs_files_blk)
	(blockinherit file.read_tmpfs_lnk_files_blk)
	(blockinherit file.read_tmpfs_blk)
	(blockinherit file.manage_tmpfs_blk)
	(blockinherit file.relabel_tmpfs_blk)

	(macro tmpfs_obj_type_transition_tmpfs ((type ARG1))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_file dir
			".xrdp")))

	(blockinherit file.read_var_log_files_blk)
	(blockinherit file.manage_var_log_files_blk)
	(blockinherit file.relabel_var_log_files_blk)

	(macro var_log_obj_type_transition_var_log ((type ARG1))
		(call file.var_log_obj_type_transition (ARG1 var_log_file file
			"xrdp.log")))

	(macro set_priv_login_boolean ((type ARG1))
		(call sec.set_spec_boolean (ARG1 xrdp_priv_login.bool))
		(optional xrdp_set_priv_login_boolean_optional_seutil
			(call setsebool.exec (ARG1))))

	(macro adm ((type ARG1)(role ARG2))
		(typeattributeset adm_subj_type_attribute ARG1)
		(optional xrdp_adm_optional_sd
			(call sd.daemon_adm_subj_type (ARG1)))
		(optional xrdp_adm_optional_sd_askpwd
			(call sd_askpwd_agent.run (ARG1 ARG2)))))

(in xrdpsesman
	(blockinherit net.tcp_bind_port_blk)
	(blockinherit net.tcp_connect_port_blk)

	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit subj.send_signal_blk)
	(blockinherit subj.send_sigchld_blk)
	(blockinherit subj.use_fd_blk)
	(blockinherit subj.rw_inherited_unix_dgram_sockets_blk)

	(blockinherit file.read_var_log_files_blk)
	(blockinherit file.manage_var_log_files_blk)
	(blockinherit file.relabel_var_log_files_blk)

	(macro append_inherited_var_log_files ((type ARG1))
		(call use_fd (ARG1))
		(allow ARG1 var_log_file append_inherited_file_perms))

	(macro var_log_obj_type_transition_var_log ((type ARG1))
		(call file.var_log_obj_type_transition (ARG1 var_log_file file
			"xrdp-sesman.log"))))

(in xrdpchansrv
	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit subj.send_signal_blk)

	(blockinherit usersubj.read_home_user_files_blk)
	(blockinherit usersubj.manage_home_user_files_blk)
	(blockinherit usersubj.relabel_home_user_files_blk)

	(macro home_dir_obj_type_transition_home ((type ARG1))
		(call usersubj.home_dir_obj_type_transition (ARG1
			home_user_file file "xrdp-chansrv.log")))

	(macro stream_connect ((type ARG1))
		(call fs.search_tmpfs (ARG1))
		(call stream_connect_pattern (ARG1 xrdp.tmpfs_file
			xrdp.tmpfs_file subj))))

(in xrdpsessvc
	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit subj.send_signal_blk)
	(blockinherit subj.send_sigchld_blk))

(in xrdpuser
	(block subj_blk
		(blockabstract subj_blk)

		(blockinherit app.application_blk)

		(typeattributeset xrdpuser.subj_type_attribute subj)

		(macro role_pattern ((role ARG1)(type ARG2))
			(call xrdpuser.role_pattern (ARG1 ARG2 subj))))

	(block priv_subj_blk
		(blockabstract priv_subj_blk)

		(blockinherit xrdpuser.subj_blk)

		(typeattributeset xrdpuser.priv_subj_type_attribute subj))

	(macro subj_type ((type ARG1))
		(typeattributeset subj_type_attribute ARG1))

	(macro priv_subj_type ((type ARG1))
		(typeattributeset priv_subj_type_attribute ARG1))

	(macro application_subj_type ((type ARG1))
		(call app.application_subj_type (ARG1))
		(typeattributeset xrdpuser.subj_type_attribute ARG1))

	(blockinherit subj.send_signal_blk)

	(blockinherit subj.rw_inherited_fifo_files_all_blk)
	(blockinherit subj.send_sigchld_all_blk)
	(blockinherit subj.link_keyring_all_blk)

	(macro role_pattern ((role ARG1)(type ARG2)(type ARG3))
		(roletype ARG1 ARG3)

		(allow ARG2 ARG3 (process (signal)))
		(call ps_subj_pattern (ARG2 ARG3))

		(optional xrdpuser_role_pattern_optional_glxutils
			(call glxutils.run (ARG3 ARG1)))

		(optional xrdpuser_role_pattern_optional_xutil
			(call xutil.run (ARG3 ARG1))))

	(macro dontaudit_create_keyring_subj ((type ARG1))
		(dontaudit ARG1 subj_type_attribute create_key_perms))

	(macro create_keyring_subj ((type ARG1))
		(allow ARG1 subj_type_attribute create_key_perms))

	(macro dontaudit_manual_subj_type_transition_subj ((type ARG1))
		(dontaudit ARG1 subj_type_attribute (process (transition))))

	(macro spec_manual_subj_type_transition_subj ((type
		ARG1)(type ARG2))
		(call manual_subj_type_transition_pattern (ARG1 ARG2
			subj_type_attribute)))

	(macro spec_manual_subj_type_transition_unpriv_subj ((type
		ARG1)(type ARG2))
		(call manual_subj_type_transition_pattern (ARG1 ARG2
			unpriv_subj_type_attribute))))

(in xrdpstartwm
	(blockinherit exec_blk)

	(macro cmd_obj_entry_subj ((type ARG1))
		(call subj.entry (ARG1 cmd_file))))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Policy
;

(boolean xrdp_priv_login true)

(block xrdp_priv_login
	(blockinherit sec.bool_obj_blk)

	(booleanif xrdp_priv_login
		(true
			(call
				xsession.spec_manual_subj_type_transition
					(xrdpsesman.subj
						xrdpuser.subj_type_attribute)))
		(false
			(call
				xsession.spec_manual_subj_type_transition
					(xrdpsesman.subj
						xrdpuser.unpriv_subj_type_attribute))))

	; this is illigal because i am referencing an external type
	; the alternative would be just as bad
	(optional xrdp_priv_login_optional_exempt
		(booleanif xrdp_priv_login
			(true
				(call
					xsession.spec_manual_subj_type_transition
						(xrdpsesman.subj
							exempt.subj))))))

(block xrdp
	(typeattribute adm_subj_type_attribute)
	(typeattribute subj_type_attribute)

	(typeattribute obj_type_attribute)

	(blockinherit subj.common_subj_blk)

	(typeattributeset subj_type_attribute subj)

	(blockinherit cmd.obj_blk)

	(call subj.entry (subj cmd_file))

	(roletype sys.role subj)

	(blockinherit file.config_obj_blk)

	(typeattributeset obj_type_attribute config_file)

	(call manage_config (subj))

	(blockinherit file.var_log_obj_blk)

	(typeattributeset obj_type_attribute var_log_file)

	(allow subj var_log_file (file (setattr)))
	(allow subj var_log_file append_file_perms)
	(allow subj var_log_file create_file_perms)
	(allow subj var_log_file read_file_perms)

	(call var_log_obj_type_transition_var_log (subj))

	(blockinherit file.tmpfs_obj_blk)

	(typeattributeset obj_type_attribute tmpfs_file)

	(call manage_tmpfs (subj))

	(call tmpfs_obj_type_transition_tmpfs (subj))

	(blockinherit file.data_obj_blk)

	(typeattributeset obj_type_attribute data_file)

	(call manage_data_files (subj))

	(blockinherit net.unreserved_port_obj_blk)

	(call tcp_bind_port (subj))

	(allow subj self (capability (dac_override)))
	(allow subj self (unix_dgram_socket (sendto)))
	(allow subj self create_tcp_stream_socket_perms)

	(call dev.read_urandom (subj))

	(call net.tcp_bind_generic_node (subj))

	(call cert.read (subj))
	(call cryptopol.read_config_files (subj))
	(call locale.read (subj))

	(call vnc.tcp_connect_port (subj))

	(call xrdpchansrv.stream_connect (subj))

	(call xrdpsesman.tcp_connect_port (subj))

	(optional xrdp_optional_logrotate
		(call logrotate.client_subj_type (subj))
		(call logrotate.client_var_log_obj_type (var_log_file)))

	(optional xrdp_optional_sd
		(call sd.daemon (subj cmd_file))

		(blockinherit sd.unit_obj_blk)

		(typeattributeset obj_type_attribute unit_file)

		(allow adm_subj_type_attribute obj_type_attribute (service
			(stop status disable enable reload start))))

	(optional xrdp_optional_sd_journald
		(call sd_journald.client_subj_type (subj)))

	(allow adm_subj_type_attribute subj_type_attribute (process (ptrace
		signal signull sigkill sigstop)))
	(call ps_subj_pattern (adm_subj_type_attribute subj_type_attribute))

	(call file.rw_config_dirs (adm_subj_type_attribute))
	(call file.rw_data_dirs (adm_subj_type_attribute))
	(call file.rw_var_log_dirs (adm_subj_type_attribute))

	(call fs.rw_tmpfs_dirs (adm_subj_type_attribute))

	(allow adm_subj_type_attribute obj_type_attribute manage_file_perms)
	(allow adm_subj_type_attribute obj_type_attribute manage_dir_perms)
	(allow adm_subj_type_attribute obj_type_attribute
		manage_lnk_file_perms)
	(allow adm_subj_type_attribute obj_type_attribute
		manage_sock_file_perms)

	(allow adm_subj_type_attribute obj_type_attribute relabel_file_perms)
	(allow adm_subj_type_attribute obj_type_attribute relabel_dir_perms)
	(allow adm_subj_type_attribute obj_type_attribute
		relabel_lnk_file_perms)
	(allow adm_subj_type_attribute obj_type_attribute
		relabel_sock_file_perms))

(block xrdpsesman
	(blockinherit subj.common_subj_blk)

	(typeattributeset xrdp.subj_type_attribute subj)

	(blockinherit cmd.obj_blk)

	(call subj.entry (subj cmd_file))

	(roletype sys.role subj)

	(blockinherit file.var_log_obj_blk)

	(typeattributeset xrdp.obj_type_attribute var_log_file)

	(allow subj var_log_file (file (setattr)))
	(allow subj var_log_file append_file_perms)
	(allow subj var_log_file create_file_perms)
	(allow subj var_log_file read_file_perms)

	(call var_log_obj_type_transition_var_log (subj))

	(blockinherit net.unreserved_port_obj_blk)

	(call tcp_bind_port (subj))

	(dontaudit subj self (capability (net_admin)))
	(allow subj self (unix_dgram_socket (sendto)))
	(allow subj self (tcp_socket (listen accept)))
	(allow subj self rw_fifo_file_perms)

	(allow subj xrdpsessvc.subj (process (sigchld)))

	(call sys.read_kernel_sysctl_files (subj))

	(call cmd.mmap_shell (subj))

	(call dev.read_urandom (subj))

	(call file.read_config_files (subj))

	(call net.tcp_bind_generic_node (subj))

	(call sec.compute_create_context (subj))

	(call locale.read (subj))

	(call nss.client_subj_type (subj))

	(call pam.login_prog_subj_type (subj))
	(call pam_console.manage_runtime_files (subj))

	(call ssh_x11_forward.tcp_bind_port (subj))

	(call vnc.client_subj_type (subj))
	(call vnc.tcp_bind_port (subj))

	(call xrdp.manage_config (subj))
	(call xrdp.manage_tmpfs (subj))
	(call xrdp.tmpfs_obj_type_transition_tmpfs (subj))

	(call xrdpsessvc.auto_subj_type_transition (subj))

	(call xrdpstartwm.exec (subj))

	(call xserver.auto_subj_type_transition (subj))
	(call xserver.read_state (subj))
	(call xserver.client_subj_type (subj))

	(call xrdpuser.dontaudit_manual_subj_type_transition_subj (subj))
	(call xrdpuser.dontaudit_create_keyring_subj (subj))
	(call xrdpuser.create_keyring_subj (subj))

	(optional xrdpsesman_optional_exempt
		(call exempt.dontaudit_manual_subj_type_transition (subj))
		(call exempt.dontaudit_create_keyring (subj))
		(call exempt.create_keyring (subj)))

	(optional xrdpsesman_optional_gkr
		(call gkrd.exec (subj))
		(call gkrd.manual_subj_type_transition_all_subj (subj))
		(call gkrd.stream_connect_all_subj (subj)))

	(optional xrdpsesman_optional_logrotate
		(call logrotate.client_subj_type (subj))
		(call logrotate.client_var_log_obj_type (var_log_file)))

	(optional xrdpsesman_optional_sd
		(call sd.daemon (subj cmd_file))

		(blockinherit sd.unit_obj_blk)

		(typeattributeset xrdp.obj_type_attribute unit_file))

	(optional xrdpsesman_optional_sd_journald
		(call sd_journald.client_subj_type (subj))))

(block xrdpchansrv
	(blockinherit subj.common_subj_blk)

	(typeattributeset xrdp.subj_type_attribute subj)

	(blockinherit cmd.obj_blk)

	(call subj.entry (subj cmd_file))

	(roletype sys.role subj)

	(blockinherit usersubj.home_user_obj_blk)

	(call manage_home_user_files (subj))
	(call home_dir_obj_type_transition_home (subj))

	(allow subj self create_unix_dgram_socket_perms)
	(allow subj self (unix_dgram_socket (sendto)))
	(allow subj self (unix_stream_socket (listen accept)))

	(call dev.read_urandom (subj))

	(call locale.read (subj))

	(call xrdp.read_config (subj))
	(call xrdp.manage_tmpfs (subj))
	(call xrdp.tmpfs_obj_type_transition_tmpfs (subj))

	(call xrdpsesman.rw_inherited_unix_dgram_sockets (subj))
	(call xrdpsesman.append_inherited_var_log_files (subj))

	(optional xrdpchansrv_optional_sd
		(call sd.forked_subj_type (subj))))

(block xrdpsessvc
	(blockinherit subj.common_subj_blk)

	(typeattributeset xrdp.subj_type_attribute subj)

	(blockinherit cmd.obj_blk)

	(call subj.entry (subj cmd_file))

	(roletype sys.role subj)

	(call locale.read (subj))

	(call xrdp.manage_tmpfs (subj))
	(call xrdp.tmpfs_obj_type_transition_tmpfs (subj))

	(call xrdpsesman.rw_inherited_unix_dgram_sockets (subj))
	(call xrdpsesman.append_inherited_var_log_files (subj))

	(call xrdpchansrv.auto_subj_type_transition (subj))

	(call xserver.send_signal (subj))

	(optional xrdpsessvc_optional_sd
		(call sd.forked_subj_type (subj))))

(block xrdpuser
	(typeattribute subj_type_attribute)
	(typeattribute priv_subj_type_attribute)
	(typeattribute unpriv_subj_type_attribute)

	(allow subj_type_attribute self rw_fifo_file_perms)

	(call standard.user_exemption_target_subj_type (subj_type_attribute))

	(call cmd.exec (subj_type_attribute))

	(call file.read_config (subj_type_attribute))
	(call file.search_mnt (subj_type_attribute))

	(call fs.getattr_all_fs (subj_type_attribute))

	(call sec.get_enforce_mode (subj_type_attribute))

	(call subj.interactive_fd_subj_type (subj_type_attribute))

	(call hostname.exec (subj_type_attribute))

	(call locale.read (subj_type_attribute))
	(call passwords.read (subj_type_attribute))

	(call nss.read_config_files (subj_type_attribute))

	(call file_context.read_config_files (subj_type_attribute))
	(call selinux_config.read_config_files (subj_type_attribute))
	(call setfiles.exec (subj_type_attribute))

	(call usersubj.list_home_dir (subj_type_attribute))
	(call usersubj.read_home_user_files (subj_type_attribute))

	(call xrdp.read_config (subj_type_attribute))

	(call xrdpsesman.rw_inherited_unix_dgram_sockets (subj_type_attribute))
	(call xrdpsesman.append_inherited_var_log_files (subj_type_attribute))

	(call xrdpstartwm.exec (subj_type_attribute))
	(call xrdpstartwm.cmd_obj_entry_subj (subj_type_attribute))

	(call xsession.manage_home_user_files (subj_type_attribute))
	(call xsession.relabel_home_user_files (subj_type_attribute))
	(call xsession.home_dir_obj_type_transition_home (subj_type_attribute))

	(call xserver.read_config (subj_type_attribute))

	(tunableif enable_rbacsep
		(true
			(call rbacsep.read_state_source_subj_type
				(subj_type_attribute))))

	(optional xrdpuser_optional_mcstransd
		(call mcstransd.contains_subj_type (subj_type_attribute)))

	(optional xrdpuser_optional_sd
		(call sd.read_state_lnk_files (subj_type_attribute))
		(call sd.forked_subj_type (subj_type_attribute)))

	(optional xrdpuser_optional_sduser
		(call sduser.reload_all_subj (subj_type_attribute))
		(call sduser.stream_connect_all_subj (subj_type_attribute)))

	(optional xrdpuser_optional_systemctl
		(call systemctl.client_subj_type (subj_type_attribute)))

	(typeattributeset unpriv_subj_type_attribute (and (subj_type_attribute)
		(not (priv_subj_type_attribute)))))

(block xrdpstartwm
	(blockinherit cmd.obj_blk))
