(in tor_socks
	(block subj_blk
		(blockabstract subj_blk)

		(blockinherit app.application_subj_blk)

		(typeattributeset tor_socks.subj_type_attribute subj)

		(macro auto_subj_type_transition ((type ARG1))
			(call tor_socks.spec_auto_subj_type_transition (ARG1 subj)))

		(macro role_pattern ((role ARG1)(type ARG2))
			(call tor_socks.role_pattern (ARG1 ARG2 subj))))

	(blockinherit subj.send_signal_blk)

	(macro application_subj_type ((type ARG1))
		(call app.application_subj_type (ARG1))
		(typeattributeset subj_type_attribute ARG1))

	(macro client_subj_type ((type ARG1))
		(typeattributeset client_subj_type_attribute ARG1))

	(macro exec ((type ARG1))
		(call client_subj_type (ARG1))
		(call can_exec (ARG1 cmd_file)))

	(macro role_pattern ((role ARG1)(type ARG2)(type ARG3))
		(call auto_subj_type_transition_pattern (ARG2 cmd_file ARG3))

		(roletype ARG1 ARG3)

		(allow ARG2 ARG3 (process (signal)))

		(allow ARG2 client_subj_type_attribute (process (noatsecure)))

		(allow ARG3 ARG2 (process (signal noatsecure)))

		(call tor.read_config (ARG2))

		(optional tor_socks_role_pattern_optional_bti
			(call bti.run (ARG3 ARG1)))

		(optional tor_sock_role_pattern_optional_curl
			(call curl.run (ARG3 ARG1))))

	(macro spec_auto_subj_type_transition ((type ARG1)(type ARG2))
		(allow ARG1 ARG2 (process (signal)))
		(call auto_subj_type_transition_pattern (ARG1 cmd_file ARG2)))

	(blockinherit net.tcp_bind_port_blk)
	(blockinherit net.tcp_connect_port_blk)

	(macro set_use_boolean ((type ARG1))
		(call sec.set_spec_boolean (ARG1 tor_socks_use.bool))
		(optional tor_socks_set_use_boolean_optional_seutil
			(call setsebool.exec (ARG1)))))
