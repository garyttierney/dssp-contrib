;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Contexts
;

(in murmurd
	(filecon "/etc/murmur(/.*)?" any config_file_context)
	(filecon "/usr/sbin/murmurd" file cmd_file_context)
	(filecon "/var/lib/mumble-server(/.*)?" any var_lib_file_context)

	(optional murmurd_unit_optional_sd
		(filecon "/usr/lib/systemd/system/[^/]*murmur.*" file
			unit_file_context)))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Macros
;

(in murmurd
	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit subj.send_signal_blk)

	(blockinherit file.search_var_lib_blk)
	(blockinherit file.list_var_lib_blk)
	(blockinherit file.read_var_lib_files_blk)
	(blockinherit file.read_var_lib_lnk_files_blk)
	(blockinherit file.read_var_lib_blk)
	(blockinherit file.manage_var_lib_blk)
	(blockinherit file.relabel_var_lib_blk)

	(macro var_lib_obj_type_transition_var_lib ((type ARG1))
		(call file.var_lib_obj_type_transition (ARG1 var_lib_file
			dir "mumble-server")))

	(blockinherit file.search_config_blk)
	(blockinherit file.list_config_blk)
	(blockinherit file.read_config_files_blk)
	(blockinherit file.read_config_lnk_files_blk)
	(blockinherit file.read_config_blk)
	(blockinherit file.manage_config_blk)
	(blockinherit file.relabel_config_blk)

	(macro adm ((type ARG1)(role ARG2))
		(typeattributeset adm_subj_type_attribute ARG1)
		(optional murmur_adm_optional_sd
			(call sd.daemon_adm_subj_type (ARG1)))
		(optional murmur_adm_optional_sd_askpwd
			(call sd_askpwd_agent.run (ARG1 ARG2)))))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Policy
;

(block murmurd
	(typeattribute adm_subj_type_attribute)

	(typeattribute obj_type_attribute)

	(blockinherit subj.common_subj_blk)

	(blockinherit cmd.obj_blk)

	(call subj.entry (subj cmd_file))

	(roletype sys.role subj)

	(blockinherit file.config_obj_blk)

	(typeattributeset obj_type_attribute config_file)

	(call read_config (subj))

	(blockinherit file.var_lib_obj_blk)

	(typeattributeset obj_type_attribute var_lib_file)

	(call manage_var_lib (subj))
	(call var_lib_obj_type_transition_var_lib (subj))

	(allow subj self rw_fifo_file_perms)
	(allow subj self r_netlink_route_socket_perms)
	(allow subj self create_tcp_stream_socket_perms)
	(allow subj self create_udp_socket_perms)
	(allow subj self create_unix_dgram_socket_perms)

	(call sys.read_cpu_online_sysfs_files (subj))
	(call sys.read_net_proc_files (subj))

	(call dev.read_urandom (subj))

	(call file.read_config_files (subj))

	(call fs.getattr_fs (subj))
	(call fs.search_tmpfs (subj))

	(call net.tcp_bind_generic_node (subj))
	(call net.udp_bind_generic_node (subj))

	(call cert.read (subj))
	(call cryptopol.client_subj_type (subj))
	(call locale.client_subj_type (subj))

	(call murmur.tcp_bind_port (subj))
	(call murmur.udp_bind_port (subj))

	(optional murmurd_optional_avahid
		(call avahid.sysbus_chat_client_subj_type (subj)))

	(optional murmurd_optional_sd
		(call sd.daemon (subj cmd_file))

		(blockinherit sd.unit_obj_blk)

		(typeattributeset obj_type_attribute unit_file)

		(allow adm_subj_type_attribute unit_file (service (stop status
			disable enable reload start))))

	(optional murmurd_optional_sysbus
		(call sysbus.client_subj_type (subj)))

	(allow adm_subj_type_attribute subj (process (ptrace signal signull
		sigkill sigstop)))
	(call ps_subj_pattern (adm_subj_type_attribute subj))

	(call file.rw_config_dirs (adm_subj_type_attribute))
	(call file.rw_var_lib_dirs (adm_subj_type_attribute))

	(allow adm_subj_type_attribute obj_type_attribute manage_file_perms)
	(allow adm_subj_type_attribute obj_type_attribute manage_dir_perms)
	(allow adm_subj_type_attribute obj_type_attribute
		manage_lnk_file_perms)

	(allow adm_subj_type_attribute obj_type_attribute relabel_file_perms)
	(allow adm_subj_type_attribute obj_type_attribute relabel_dir_perms)
	(allow adm_subj_type_attribute obj_type_attribute
		relabel_lnk_file_perms))
