;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Contexts
;

(in kmod
	(filecon "/etc/depmod\.d(/.*)?" any config_file_context)
	(filecon "/etc/modprobe\.d(/.*)?" any config_file_context)
	(filecon "/usr/bin/kmod" file cmd_file_context)

	(optional kmod_unit_optional_sd
		(filecon "/usr/lib/systemd/system/[^/]*kmod-static-nodes.*"
			file unit_file_context)))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Macros
;

(in kmod
	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit run_blk)

	(blockinherit subj.send_signal_blk)

	(macro auto_subj_range_transition ((type ARG1)(level ARG2)(level ARG3))
		(call auto_subj_range_transition_pattern (ARG1 cmd_file ARG2
			ARG3)))

	(blockinherit file.search_config_blk)
	(blockinherit file.list_config_blk)
	(blockinherit file.read_config_files_blk)
	(blockinherit file.read_config_lnk_files_blk)
	(blockinherit file.read_config_blk)
	(blockinherit file.manage_config_blk)
	(blockinherit file.relabel_config_blk)

	(macro adm ((type ARG1)(role ARG2))
		(typeattributeset adm_subj_type_attribute ARG1)
		(optional kmod_adm_optional_sd
			(call sd.daemon_adm_subj_type (ARG1)))
		(optional kmod_adm_optional_sd_askpwd
			(call sd_askpwd_agent.run (ARG1 ARG2)))))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Policy
;

(block kmod
	(roleattribute role_attribute)

	(typeattribute obj_type_attribute)

	(typeattribute adm_subj_type_attribute)

	(blockinherit app.application_blk)

	(roleattributeset role_attribute sys.role)

	(roletype role_attribute subj)

	(blockinherit file.config_obj_blk)

	(typeattributeset obj_type_attribute config_file)

	(call read_config (subj))

	(allow subj self (capability (dac_override)))

	(call sys.link_keyring (subj))
	(call sys.load_kernel_module_subj_type (subj))
	(call sys.request_load_module (subj))

	(call mls.range_trans_subj_type (subj))

	(call cmd.exec (subj))
	(call cmd.exec_shell (subj))

	(call fs.read_sysfs (subj))
	(call fs.trace_client_subj_type (subj))

	(call bootloader.read_boot_files (subj))

	(call modules.read (subj))
	(call modules_dep.manage_files (subj))
	(call modules_dep.modules_obj_type_transition_modules_dep (subj))

	(call nss.client_subj_type (subj))

	(optional kmod_optional_firewalld
		(call firewalld.rw_inherited_tmpfs_files (subj))
		(call firewalld.write_inherited_fifo_files (subj)))

	(optional kmod_optional_iptables
		(call iptables.dontaudit_rw_rawip_sockets (subj))
		(call iptables.dontaudit_rw_unix_stream_sockets (subj))
		(call iptables.read_runtime_files (subj)))

	(optional kmod_optional_rpm
		(call rpm_script_client_subj_type (subj)))

	(optional kmod_optional_sd
		(call sd.daemon (subj cmd_file))

		(blockinherit sd.unit_obj_blk)

		(typeattributeset obj_type_attribute unit_file)

		(allow adm_subj_type_attribute unit_file (service (stop status
			disable enable reload start))))

	(optional kmod_optional_sd_tmpfiles
		(call sd_tmpfiles.manage_runtime_files (subj)))

	(allow adm_subj_type_attribute subj (process (ptrace signal signull
		sigkill sigstop)))
	(allow subj adm_subj_type_attribute (process (sigchld)))
	(call ps_subj_pattern (adm_subj_type_attribute subj))

	(call file.rw_config_dirs (adm_subj_type_attribute))

	(allow adm_subj_type_attribute obj_type_attribute manage_file_perms)
	(allow adm_subj_type_attribute obj_type_attribute manage_dir_perms)
	(allow adm_subj_type_attribute obj_type_attribute
		manage_lnk_file_perms)

	(allow adm_subj_type_attribute obj_type_attribute relabel_file_perms)
	(allow adm_subj_type_attribute obj_type_attribute relabel_dir_perms)
	(allow adm_subj_type_attribute obj_type_attribute
		relabel_lnk_file_perms))
