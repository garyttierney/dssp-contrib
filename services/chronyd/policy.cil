(block chronyc
	(roleattribute role_attribute)

	(blockinherit app.application_blk)

	(typeattributeset chronyd.subj_type_attribute subj)

	(roleattributeset role_attribute sys.role)

	(roletype role_attribute subj)

	(blockinherit file.runtime_obj_blk)

	(call manage_runtime_sock_files (subj))
	(call chronyd_runtime_obj_type_transition_runtime (subj))

	(call chronyd.read_config_files (subj))
	(call chronyd.dgram_send (subj))

	(allow subj self (capability (dac_override)))

	(call sys.read_crypto_sysctl_files (subj))

	(call terminfo.read_all (subj))
	(call locale.read (subj))

	(call nss.client_subj_type (subj))

	(optional chronyc_optional_dhclient
		(call dhclient.read_var_lib (subj)))

	(optional chronyc_optional_sd
		(call sd.daemon (subj cmd_file))))

(block chronyd
	(typeattribute subj_type_attribute)
	(typeattribute adm_subj_type_attribute)
	(typeattribute control_sd_unit_subj_type_attribute)

	(typeattribute obj_type_attribute)

	(blockinherit subj.common_subj_blk)

	(typeattributeset subj_type_attribute subj)

	(blockinherit cmd.obj_blk)

	(call subj.entry (subj cmd_file))

	(roletype sys.role subj)

	(blockinherit file.config_obj_blk)

	(typeattributeset obj_type_attribute config_file)

	(allow subj config_file (file (setattr)))
	(allow subj config_file append_file_perms)
	(allow subj config_file read_file_perms)

	(blockinherit file.runtime_obj_blk)

	(typeattributeset obj_type_attribute runtime_file)

	(call manage_runtime (subj))
	(call runtime_obj_type_transition_runtime (subj))

	(blockinherit file.var_lib_obj_blk)

	(typeattributeset obj_type_attribute var_lib_file)

	(call manage_var_lib (subj))
	(call var_lib_obj_type_transition_var_lib (subj))

	(blockinherit file.var_log_obj_blk)

	(typeattributeset obj_type_attribute var_log_file)

	(allow subj var_log_file manage_dir_perms)
	(allow subj var_log_file (file (setattr)))
	(allow subj var_log_file append_file_perms)
	(allow subj var_log_file create_file_perms)
	(allow subj var_log_file read_file_perms)

	(call var_log_obj_type_transition_var_log (subj))

	(optional chronyd_optional_logrotate
		(call logrotate.client_var_log_obj_type (var_log_file)))

	(allow subj self (capability (sys_time setuid setgid fsetid chown)))
	(allow subj self (process (setcap)))
	(allow subj self rw_fifo_file_perms)

	(call chrony_cmdmon.udp_bind_reserved_port (subj))

	(call sys.read_crypto_sysctl_files (subj))

	(call cmd.exec_shell (subj))

	(call dev.read_urandom (subj))

	(call net.udp_bind_generic_node (subj))

	(call term.use_inherited_unallocated_ttys (subj))

	(call chronyc.dgram_send (subj))

	(call locale.read (subj))

	(call nss.client_subj_type (subj))

	(call ntp.udp_bind_reserved_port (subj))

	(optional chronyd_optional_dhclient
		(call dhclient.read_var_lib (subj)))

	(optional chronyd_optional_sd
		(call sd.daemon (subj cmd_file))

		(call sd.daemon_pid_obj_type (runtime_file))

		(blockinherit sd.unit_obj_blk)

		(typeattributeset obj_type_attribute unit_file)

		(allow adm_subj_type_attribute unit_file (service (stop status
			disable enable reload start))))

	(optional chronyd_optional_sd_journald
		(call sd_journald.client_subj_type (subj)))

	(optional enable_status_start_sd_unit_subj_type_attribute_optional_sd
		(allow control_sd_unit_subj_type_attribute unit_file (service
			(start status stop reload enable disable))))

	(allow adm_subj_type_attribute subj_type_attribute (process (ptrace
		signal signull sigkill sigstop)))
	(call ps_subj_pattern (adm_subj_type_attribute subj_type_attribute))

	(call file.search_runtime (adm_subj_type_attribute))

	(allow adm_subj_type_attribute obj_type_attribute manage_file_perms)
	(allow adm_subj_type_attribute obj_type_attribute manage_dir_perms)
	(allow adm_subj_type_attribute obj_type_attribute
		manage_lnk_file_perms)

	(allow adm_subj_type_attribute obj_type_attribute relabel_file_perms)
	(allow adm_subj_type_attribute obj_type_attribute relabel_dir_perms)
	(allow adm_subj_type_attribute obj_type_attribute
		relabel_lnk_file_perms))

(block chrony_cmdmon
	(blockinherit net.reserved_port_obj_blk))

(block chronyd_helper
	(blockinherit cmd.obj_blk)

	(optional chrony_helper_optional_sd
		(call sd.daemon (chronyd.subj cmd_file))))
