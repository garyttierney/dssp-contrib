;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Contexts
;

(in caribou
	(filecon "/usr/libexec/caribou" file cmd_file_context))

(in cariboup
	(filecon "/usr/bin/caribou-preferences" file cmd_file_context))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Macros
;

(in caribou
	(block subj_blk
		(blockabstract subj_blk)

		(blockinherit gnomeapp.gnomeapplication_subj_blk)

		(typeattributeset caribou.subj_type_attribute subj)

		(blockinherit subj.send_signal_blk)

		(macro auto_subj_type_transition ((type ARG1))
			(call caribou.spec_auto_subj_type_transition (ARG1
				subj)))

		(macro role_pattern ((role ARG1)(type ARG2))
			(call caribou.role_pattern (ARG1 ARG2 subj))))

	(macro send_signal_all_subj ((type ARG1))
		(allow ARG1 subj_type_attribute (process (signal)))))

(in cariboup
	(block subj_blk
		(blockabstract subj_blk)

		(blockinherit gnomeapp.gnomeapplication_subj_blk)

		(typeattributeset cariboup.subj_type_attribute subj)

		(macro auto_subj_type_transition ((type ARG1))
			(call cariboup.spec_auto_subj_type_transition (ARG1
				subj)))

		(macro role_pattern ((role ARG1)(type ARG2))
			(call cariboup.role_pattern (ARG1 ARG2 subj)))))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Policy
;

(block caribou
	(typeattribute subj_type_attribute)

	(blockinherit gnomeapp.gnomeapplication_cmd_obj_blk)

	(call subj.entry (subj_type_attribute cmd_file))

	(call locale.client_subj_type (subj_type_attribute))

	(optional caribou_subj_type_optional_xserver
		(call xserver.client_subj_type (subj_type_attribute))))

(block cariboup
	(typeattribute subj_type_attribute)

	(blockinherit gnomeapp.gnomeapplication_cmd_obj_blk)

	(call subj.entry (subj_type_attribute cmd_file)))
