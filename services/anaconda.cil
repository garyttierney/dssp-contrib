;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Contexts
;

(in anaconda
	(filecon "/mnt/sysimage/\.hs_err_pid.*\.log\..*" file
		boot_flag_file_context)
	(filecon "/usr/sbin/anaconda" file cmd_file_context)
	(filecon "/var/log/anaconda(/.*)?" any var_log_file_context)
	(filecon "/var/run/anaconda\.pid" file runtime_file_context)
	(filecon "/var/run/install(/.*)?" any runtime_file_context)

	(optional anaconda_unit_optional_sd
		(filecon "/usr/lib/systemd/system/[^/]*anaconda.*" file
			unit_file_context)
		(filecon "/usr/lib/systemd/system/[^/]*instperf.*" file
			unit_file_context)
		(filecon "/usr/lib/systemd/system/[^/]*zram.*" file
			unit_file_context)))

(in anacondacleanup
	(filecon "/usr/bin/anaconda-cleanup" file cmd_file_context))

(in instperf
	(filecon "/usr/bin/instperf" file cmd_file_context))

(in zramswap
	(filecon "/usr/libexec/anaconda/zramswapoff" file cmd_file_context)
	(filecon "/usr/libexec/anaconda/zramswapon" file cmd_file_context))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Macros
;

(in anaconda
	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit run_blk)

	(blockinherit subj.send_signal_blk)
	(blockinherit subj.use_fd_blk)
	(blockinherit subj.write_inherited_fifo_files_blk)

	(macro rw_sem ((type ARG1))
		(allow ARG1 subj rw_sem_perms))

	(macro sysbus_chat_client_subj_type ((type ARG1))
		(typeattributeset sysbus_chat_client_subj_type_attribute ARG1))

	(blockinherit file.read_boot_flag_files_blk)
	(blockinherit file.manage_boot_flag_files_blk)
	(blockinherit file.relabel_boot_flag_files_blk)

	(macro rootfs_obj_type_transition_boot_flag ((type ARG1))
		(call fs.rootfs_obj_type_transition (ARG1 boot_flag_file file
			"*")))

	(blockinherit file.search_runtime_blk)
	(blockinherit file.list_runtime_blk)
	(blockinherit file.read_runtime_files_blk)
	(blockinherit file.read_runtime_lnk_files_blk)
	(blockinherit file.read_runtime_blk)
	(blockinherit file.manage_runtime_blk)
	(blockinherit file.relabel_runtime_blk)

	(macro runtime_obj_type_transition_runtime ((type ARG1))
		(call file.runtime_obj_type_transition (ARG1 runtime_file file
			"anaconda.pid"))
		(call file.runtime_obj_type_transition (ARG1 runtime_file dir
			"install")))

	(blockinherit file.search_var_log_blk)
	(blockinherit file.list_var_log_blk)
	(blockinherit file.read_var_log_files_blk)
	(blockinherit file.read_var_log_lnk_files_blk)
	(blockinherit file.read_var_log_blk)
	(blockinherit file.manage_var_log_blk)
	(blockinherit file.relabel_var_log_blk)

	(macro var_log_obj_type_transition_var_log ((type ARG1))
		(call file.var_log_obj_type_transition (ARG1 var_log_file dir
			"anaconda")))

	(blockinherit usersubj.read_home_user_files_blk)
	(blockinherit usersubj.manage_home_user_files_blk)
	(blockinherit usersubj.relabel_home_user_files_blk)

	(macro home_dir_obj_type_transition_home_user ((type ARG1))
		(call usersubj.home_dir_obj_type_transition (ARG1
			home_user_file file "anaconda-ks.cfg")))

	(blockinherit usersubj.read_tmpfs_user_files_blk)
	(blockinherit usersubj.manage_tmpfs_user_files_blk)
	(blockinherit usersubj.relabel_tmpfs_user_files_blk)

	(macro rw_inherited_tmpfs_user_files ((type ARG1))
		(call use_fd (ARG1))
		(allow ARG1 tmpfs_user_file rw_inherited_file_perms))

	(macro mmap_tmpfs_user_files ((type ARG1))
		(call fs.search_tmpfs (ARG1))
		(allow ARG1 tmpfs_user_file mmap_file_perms))

	(macro tmpfs_obj_type_transition_tmpfs ((type ARG1))
		(call fs.tmpfs_obj_type_transition (ARG1 tmpfs_user_file file
			"*")))

	(macro adm ((type ARG1)(role ARG2))
		(typeattributeset adm_subj_type_attribute ARG1)
		(optional anaconda_adm_optional_sd
			(call sd.daemon_adm_subj_type (ARG1)))
		(optional anaconda_adm_optional_sd_askpwd
			(call sd_askpwd_agent.run (ARG1 ARG2)))))

(in anacondacleanup
	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit run_blk)

	(blockinherit subj.send_signal_blk)

	(macro rw_sem ((type ARG1))
		(allow ARG1 subj rw_sem_perms)))

(in instperf
	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit subj.send_signal_blk))

(in zramswap
	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit subj.send_signal_blk))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Policy
;

(block anaconda
	(roleattribute role_attribute)

	(typeattribute adm_subj_type_attribute)
	(typeattribute subj_type_attribute)
	(typeattribute sysbus_chat_client_subj_type_attribute)

	(typeattribute obj_type_attribute)

	(blockinherit app.application_blk)

	(typeattributeset subj_type_attribute subj)

	(roleattributeset role_attribute sys.role)

	(roletype role_attribute subj)

	(blockinherit usersubj.tmpfs_user_obj_blk)

	(typeattributeset obj_type_attribute tmpfs_user_file)

	(call manage_tmpfs_user_files (subj))
	(call mmap_tmpfs_user_files (subj))
	(call tmpfs_obj_type_transition_tmpfs (subj))

	(blockinherit usersubj.home_user_obj_blk)

	(typeattributeset obj_type_attribute home_user_file)

	(call manage_home_user_files (subj))
	(call home_dir_obj_type_transition_home_user (subj))

	(blockinherit file.runtime_obj_blk)

	(call sys.mountpoint_obj_type (runtime_file))

	(typeattributeset obj_type_attribute runtime_file)

	(call manage_runtime (subj))
	(call runtime_obj_type_transition_runtime (subj))

	(blockinherit file.var_log_obj_blk)

	(typeattributeset obj_type_attribute var_log_file)

	(call manage_var_log (subj))
	(call var_log_obj_type_transition_var_log (subj))

	(blockinherit file.boot_flag_obj_blk)

	(typeattributeset obj_type_attribute boot_flag_file)

	(call manage_boot_flag_files (subj))
	(call relabel_boot_flag_files (subj))
	(call rootfs_obj_type_transition_boot_flag (subj))

	(dontaudit subj self (capability (net_admin)))
	(allow subj self (capability (dac_override setuid sys_resource
		sys_rawio chown fowner fsetid setfcap sys_chroot sys_admin)))
	(allow subj self (process (getsched)))
	(allow subj self rw_fifo_file_perms)
	(allow subj self create_socket_perms)
	(allow subj self (socket (listen accept)))
	(allow subj self create_sem_perms)

	(call standard.obj_change_exemption_subj_type (subj))

	(call sys.get_sysvipc_info (subj))
	(call sys.list_mountpoints (subj))
	(call sys.read_cpu_online_sysfs_files (subj))
	(call sys.read_unlabeled (subj))
	(call sys.setattr_mountpoint_dirs (subj))
	(call sys.relabel_mountpoint_dirs (subj))
	(call sys.relabelfrom_unlabeled_dirs (subj))
	(call sys.request_load_module (subj))

	(call cmd.exec (subj))
	(call cmd.exec_shell (subj))

	(call dev.read_random (subj))
	(call dev.read_urandom (subj))
	(call dev.rw_lvm_control (subj))

	(call file.manage_all_except (subj))
	(call file.relabel_all_except (subj))

	(call fs.audit_write_access_devtmpfs_dirs (subj))
	(call fs.create_rootfs_dirs (subj))
	(call fs.create_rootfs_lnk_files (subj))
	(call fs.getattr_all_fs (subj))
	(call fs.read_iso9660 (subj))
	(call fs.read_debugfs (subj))
	(call fs.manage_dosfs (subj))
	(call fs.list_sysfs (subj))
	(call fs.read_sysfs_lnk_files (subj))
	(call fs.rw_sysfs_files (subj))
	(call fs.relabel_dosfs (subj))
	(call fs.relabelfrom_rootfs_lnk_files (subj))
	(call fs.setattr_rootfs_dirs (subj))
	(call fs.setattr_rootfs_lnk_files (subj))
	(call fs.unmount_fs (subj))
	(call fs.write_cgroup_files (subj))

	(call lib.manage_lib (subj))

	(call storage.rw_fixed_disk (subj))
	(call storage.rw_removable (subj))

	(call subj.ptrace_uncond_subj_type (subj))
	(call subj.read_state_subj (subj))
	(call subj.execmem_uncond_subj_type (subj))

	(call chage.run (subj role_attribute))

	(call dd.exec (subj))

	(call fstools.run (subj role_attribute))

	(call hwclock.run (subj role_attribute))

	(call kmod.run (subj role_attribute))

	(call ldconfig.run (subj role_attribute))

	(call ipp.tcp_connect_port (subj))

	(call shadow.manage (subj))
	(call shadow.relabel (subj))

	(call mount.run (subj role_attribute))

	(call nss.client_subj_type (subj))

	(call http.tcp_connect_port (subj))

	(call policy_config.manage (subj))
	(call policy_config.relabel (subj))
	(call setfiles.run (subj role_attribute))

	(call udev.client_subj_type (subj))

	(call udevadm.run (subj role_attribute))

	(call useradd.run (subj role_attribute))

	(optional anaconda_optional_atspi
		(call atspird.sessbus_chat_all_client_subj_type (subj)))

	(optional anaconda_optional_audispd
		(call audispd.manage_config (subj))
		(call audispd.relabel_config (subj))
		(call audispd.manage_runtime_sock_files (subj))
		(call audispd.relabel_runtime_sock_files (subj)))

	(optional anaconda_optional_auditd
		(call auditd.manage_config (subj))
		(call auditd.relabel_config (subj))
		(call auditd.manage_runtime_files (subj))
		(call auditd.relabel_runtime_files (subj))
		(call auditd.manage_runtime_sock_files (subj))
		(call auditd.relabel_runtime_sock_files (subj))
		(call auditd.manage_var_log (subj))
		(call auditd.relabel_var_log (subj)))

	(optional anaconda_optional_authconfig
		(call authconfig.run (subj role_attribute)))

	(optional anaconda_optional_bootloader
		(call bootloader.run (subj role_attribute)))

	(optional anaconda_optional_chpasswd
		(call chpasswd.run (subj role_attribute)))

	(optional anaconda_optional_chronyd
		(call chronyd.control_sd_unit_subj_type (subj))
		(call chronyd.read_state (subj)))

	(optional anaconda_optional_dm
		(call dmsetup.run (subj role_attribute)))

	(optional anaconda_optional_dracut
		(call dracut.run (subj role_attribute)))

	(optional anaconda_optional_firewalld
		(call firewallcmd.run (subj role_attribute)))

	(optional anaconda_optional_gsd
		(call gsd.sessbus_chat_all_client_subj_type (subj)))

	(optional anaconda_optional_hostnamectl
		(call hostnamectl.exec (subj)))

	(optional anaconda_optional_iscsid
		(call iscsid.mmap_cmd_files (subj)))

	(optional anaconda_optional_lvm
		(call lvm.run (subj role_attribute)))

	(optional anaconda_optional_md
		(call mdadm.run (subj role_attribute)))

	(optional anaconda_optional_multipath
		(call multipathd.control_sd_unit_subj_type (subj))
		(call multipath.run (subj role_attribute)))

	(optional anaconda_optional_nm
		(call nm.client_subj_type (subj)))

	(optional anaconda_optional_rpm
		(call rpm.manage_var_lib_files (subj)))

	(optional anaconda_optional_sd
		(call sd.daemon (subj cmd_file))

		(call sd.stream_connect (subj))

		(blockinherit sd.unit_obj_blk)

		(typeattributeset obj_type_attribute unit_file)

		(allow adm_subj_type_attribute unit_file (service (stop status
			disable enable reload start))))

	(optional anaconda_optional_sd_hostnamed
		(call sd_hostnamed.sysbus_chat_client_subj_type (subj)))

	(optional anaconda_optional_journalctl
		(call journalctl.system_client_subj_type (subj)))

	(optional anaconda_optional_sd_journald
		(call sd_journald.client_subj_type (subj)))

	(optional anaconda_optional_sd_localed
		(call sd_localed.sysbus_chat_client_subj_type (subj)))

	(optional anaconda_optional_sd_machined
		(call sd_machined.config_obj_type_transition_config (subj)))

	(optional anaconda_optional_sessbus
		(call sessbus.client_all_subj (subj)))

	(optional anaconda_optional_sysbus
		(call sysbus.client_subj_type (subj)))

	(optional anaconda_optional_systemctl
		(call systemctl.system_client_subj_type (subj)))

	(optional anaconda_optional_webkit
		(call webkitwp.exec (subj)))

	(optional anaconda_optional_xserver
		(call xserver.tmpfs_client (subj tmpfs_user_file)))

	(optional anaconda_optional_xutil
		(call xutil.exec (subj)))

	(optional anacond_optional_yelp
		(call yelp.exec (subj)))

	(optional
		anaconda_sysbus_chat_client_subj_type_attribute_optional_sysbus
		(allow subj sysbus_chat_client_subj_type_attribute (dbus
			(send_msg)))
		(allow sysbus_chat_client_subj_type_attribute subj (dbus
			(send_msg))))

	(allow adm_subj_type_attribute subj_type_attribute (process (ptrace
		signal signull sigkill sigstop)))
	(allow subj_type_attribute adm_subj_type_attribute (process (sigchld)))
	(call ps_subj_pattern (adm_subj_type_attribute subj_type_attribute))

	(call subj.ptrace_subj_type (adm_subj_type_attribute))

	(call file.rw_runtime_dirs (adm_subj_type_attribute))

	(allow adm_subj_type_attribute obj_type_attribute manage_dir_perms)
	(allow adm_subj_type_attribute obj_type_attribute manage_file_perms)
	(allow adm_subj_type_attribute obj_type_attribute
		manage_lnk_file_perms)

	(allow adm_subj_type_attribute obj_type_attribute relabel_dir_perms)
	(allow adm_subj_type_attribute obj_type_attribute relabel_file_perms)
	(allow adm_subj_type_attribute obj_type_attribute
		relabel_lnk_file_perms))

(block anacondacleanup
	(roleattribute role_attribute)

	(blockinherit app.application_blk)

	(typeattributeset anaconda.subj_type_attribute subj)

	(roleattributeset role_attribute sys.role)

	(roletype role_attribute subj)

	(allow subj self (capability (dac_override sys_admin sys_rawio
		sys_resource)))
	(allow subj self (process (setrlimit)))
	(allow subj self rw_fifo_file_perms)
	(allow subj self create_sem_perms)

	(call sys.get_sysvipc_info (subj))
	(call sys.read_cpu_online_sysfs_files (subj))
	(call sys.read_crypto_sysctl_files (subj))

	(call cmd.exec (subj))
	(call cmd.exec_shell (subj))
	(call cmd.list_cmd (subj))

	(call dev.read_random (subj))
	(call dev.read_urandom (subj))
	(call dev.rw_lvm_control (subj))

	(call file.read_config (subj))
	(call file.read_data (subj))
	(call file.search_var_cache (subj))
	(call file.search_var_tmp (subj))

	(call fs.read_iso9660 (subj))
	(call fs.read_devtmpfs_lnk_files (subj))
	(call fs.read_sysfs (subj))
	(call fs.write_inherited_tmpfs_files (subj))

	(call lib.manage_lib (subj))

	(call storage.rw_fixed_disk (subj))
	(call storage.rw_removable (subj))

	(call anaconda.manage_tmpfs_user_files (subj))
	(call anaconda.mmap_tmpfs_user_files (subj))
	(call anaconda.tmpfs_obj_type_transition_tmpfs (subj))

	(call anaconda.search_runtime (subj))

	(call fstools.run (subj role_attribute))

	(call ldconfig.exec (subj))

	(call locale.read (subj))

	(call mount.run (subj role_attribute))

	(call nss.client_subj_type (subj))

	(call udev.client_subj_type (subj))

	(call udevadm.run (subj role_attribute))

	(optional anacondacleanup_optional_dm
		(call dmsetup.run (subj role_attribute)))

	(optional anacondacleanup_optional_dracut_initramfs
		(call dracut_initramfs.search_runtime (subj)))

	(optional anacondacleanup_optional_iscsid
		(call iscsid.read_var_lib (subj))
		(call iscsid.manage_runtime_lock_files (subj))
		(call iscsid.runtime_lock_obj_type_transition_runtime_lock
			(subj)))

	(optional anacondacleanup_optional_lvm
		(call lvm.run (subj role_attribute)))

	(optional anacondacleanup_optional_md
		(call mdadm.run (subj role_attribute)))

	(optional anacondacleanup_optional_multipath
		(call multipath.run (subj role_attribute)))

	(optional anacondacleanup_optional_rpm
		(call rpm.manage_var_lib_files (subj)))

	(optional anacondacleanup_optional_sysbus
		(call sysbus.client_subj_type (subj))))

(block instperf
	(blockinherit subj.common_subj_blk)

	(blockinherit cmd.obj_blk)

	(call subj.entry (subj cmd_file))

	(typeattributeset anaconda.subj_type_attribute subj)

	(roletype sys.role subj)

	(optional instperf_optional_sd
		(call sd.daemon (subj cmd_file))))

(block zramswap
	(blockinherit subj.common_subj_blk)

	(blockinherit cmd.obj_blk)

	(call subj.entry (subj cmd_file))

	(typeattributeset anaconda.subj_type_attribute subj)

	(roletype sys.role subj)

	(optional zramswap_optional_sd
		(call sd.daemon (subj cmd_file))))
