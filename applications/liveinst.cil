;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Contexts
;

(in liveinst
	(filecon "/usr/sbin/liveinst" file cmd_file_context))

(in liveinstsetup
	(filecon "/usr/libexec/liveinst-setup\.sh" file cmd_file_context))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Macros
;

(in liveinst
	(block subj_blk
		(blockabstract subj_blk)

		(blockinherit app.application_subj_blk)

		(typeattributeset liveinst.subj_type_attribute subj)

		(macro auto_subj_type_transition ((type ARG1))
			(call liveinst.spec_auto_subj_type_transition (ARG1
				subj)))

		(macro role_pattern ((role ARG1)(type ARG2))
			(call liveinst.role_pattern (ARG1 ARG2 subj))))

	(blockinherit exec_blk)

	(blockinherit subj.send_signal_blk)

	(macro application_subj_type ((type ARG1))
		(call app.application_subj_type (ARG1))
		(typeattributeset subj_type_attribute ARG1))

	(macro role_pattern ((role ARG1)(type ARG2)(type ARG3))
		(call auto_subj_type_transition_pattern (ARG2 cmd_file ARG3))

		(roletype ARG1 ARG3)

		(allow ARG2 ARG3 (process (signal)))

		(allow ARG3 ARG2 (process (signal)))

		(call anaconda.run (ARG3 ARG1))
		(call anacondacleanup.run (ARG3 ARG1))

		(call curl.run (ARG3 ARG1))

		(call kmod.run (ARG3 ARG1)))

	(macro spec_auto_subj_type_transition ((type ARG1)(type ARG2))
		(allow ARG1 ARG2 (process (signal)))
		(call auto_subj_type_transition_pattern (ARG1 cmd_file ARG2))))

(in liveinstsetup
	(block subj_blk
		(blockabstract subj_blk)

		(blockinherit app.application_subj_blk)

		(typeattributeset liveinstsetup.subj_type_attribute subj)

		(macro auto_subj_type_transition ((type ARG1))
			(call liveinstsetup.spec_auto_subj_type_transition (ARG1
				subj)))

		(macro role_pattern ((role ARG1)(type ARG2))
			(call liveinstsetup.role_pattern (ARG1 ARG2 subj))))

	(blockinherit exec_blk)

	(blockinherit subj.send_signal_blk)

	(macro application_subj_type ((type ARG1))
		(call app.application_subj_type (ARG1))
		(typeattributeset subj_type_attribute ARG1))

	(macro role_pattern ((role ARG1)(type ARG2)(type ARG3))
		(call auto_subj_type_transition_pattern (ARG2 cmd_file ARG3))

		(roletype ARG1 ARG3)

		(allow ARG2 ARG3 (process (signal)))

		(allow ARG3 ARG2 (process (signal)))

		(optional liveinstsetup_role_pattern_optional_xutil
			(call xutil.run (ARG3 ARG1))))

	(macro spec_auto_subj_type_transition ((type ARG1)(type ARG2))
		(allow ARG1 ARG2 (process (signal)))
		(call auto_subj_type_transition_pattern (ARG1 cmd_file ARG2))))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Policy
;

(block liveinst
	(typeattribute subj_type_attribute)

	(blockinherit app.application_cmd_obj_blk)

	(call subj.entry (subj_type_attribute cmd_file))

	(allow subj_type_attribute self (capability (dac_override)))
	(allow subj_type_attribute self rw_fifo_file_perms)

	(call standard.user_exemption_target_subj_type (subj_type_attribute))

	(call sys.read_cpu_online_sysfs_files (subj_type_attribute))

	(call cmd.audit_read_access_shell_files (subj_type_attribute))
	(call cmd.exec (subj_type_attribute))

	(call dev.read_urandom (subj_type_attribute))

	(call file.list_var_tmp (subj_type_attribute))
	(call file.read_config (subj_type_attribute))

	(call fs.list_tmpfs (subj_type_attribute))
	(call fs.read_devtmpfs_lnk_files (subj_type_attribute))

	(call sec.get_enforce_mode (subj_type_attribute))

	(call storage.getattr_fixed_disk (subj_type_attribute))

	(call cert.read (subj_type_attribute))
	(call locale.read (subj_type_attribute))

	(call nss.client_subj_type (subj_type_attribute))

	(call selinux_config.read_config_files (subj_type_attribute))
	(call setenforce.dontaudit_exec_cmd_files (subj_type_attribute))

	(optional liveinst_subj_type_optional_rpm
		(call rpm.send_signull (subj_type_attribute))
		(call rpm.exec (subj_type_attribute))
		(call rpm.read_config (subj_type_attribute))
		(call rpm.manage_var_lib_files (subj_type_attribute))))

(block liveinstsetup
	(typeattribute subj_type_attribute)

	(blockinherit app.application_cmd_obj_blk)

	(call subj.entry (subj_type_attribute cmd_file))

	(allow subj_type_attribute self rw_fifo_file_perms)

	(call cmd.exec (subj_type_attribute))
	(call cmd.audit_read_access_shell_files (subj_type_attribute))

	(call storage.getattr_fixed_disk (subj_type_attribute))

	(call file.read_data (subj_type_attribute))

	(call locale.read (subj_type_attribute))

	(call usersubj.manage_home_user_files (subj_type_attribute))
	(call usersubj.read_home_config_files (subj_type_attribute)))
