;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Contexts
;

(in memcached
	(block memcached
		(filecon "/etc/sysconfig/memcached" file config_file_context)
		(filecon "/usr/bin/memcached" file cmd_file_context)
		(filecon "/var/lib/memcached(/.*)?" any var_lib_file_context)

		(optional memcached_unit_optional_sd
			(filecon "/usr/lib/systemd/system/[^/]*memcached.*"
				file unit_file_context))))

(in memcachedtool
	(filecon "/usr/bin/memcached-tool" file cmd_file_context))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Macros
;

(block memcached_blk
	(blockabstract memcached_blk)

	(block memcached
		(typeattribute adm_subj_type_attribute)

		(typeattribute subj_type_attribute)

		(typeattribute obj_type_attribute)

		(typeattribute config_obj_type_attribute)
		(typeattribute port_obj_type_attribute)
		(typeattribute var_lib_obj_type_attribute)
		(typeattribute unit_obj_type_attribute)

		(typeattributeset .memcached.adm_subj_type_attribute
			adm_subj_type_attribute)

		(typeattributeset .memcached.obj_type_attribute
			obj_type_attribute)

		(typeattributeset .memcached.config_obj_type_attribute
			config_obj_type_attribute)
		(typeattributeset .memcached.port_obj_type_attribute
			port_obj_type_attribute)
		(typeattributeset .memcached.var_lib_obj_type_attribute
			var_lib_obj_type_attribute)
		(typeattributeset .memcached.unit_obj_type_attribute
			unit_obj_type_attribute)

		(blockinherit subj.common_subj_blk)

		(typeattributeset subj_type_attribute subj)

		(typeattributeset .memcached.subj_type_attribute
			subj_type_attribute)

		(blockinherit cmd.obj_blk)

		(call subj.entry (subj cmd_file))

		(roletype sys.role subj)

		(blockinherit net.unreserved_port_obj_blk)

		(typeattributeset port_obj_type_attribute port)

		(allow subj port (tcp_socket (name_bind)))
		(allow subj port (udp_socket (name_bind)))

		(blockinherit file.config_obj_blk)

		(typeattributeset obj_type_attribute config_file)
		(typeattributeset config_obj_type_attribute config_file)

		(allow subj config_file read_file_perms)

		(blockinherit file.var_lib_obj_blk)

		(typeattributeset obj_type_attribute var_lib_file)
		(typeattributeset var_lib_obj_type_attribute var_lib_file)

		(call manage_var_lib (subj))
		(call var_lib_obj_type_transition_var_lib (subj))

		(optional memcached_blk_optional_sd
			(call sd.daemon (subj cmd_file))

			(blockinherit sd.unit_obj_blk)

			(typeattributeset obj_type_attribute unit_file)
			(typeattributeset unit_obj_type_attribute unit_file)

			(allow adm_subj_type_attribute unit_file (service
				(stop status disable enable reload start))))

		(allow adm_subj_type_attribute subj_type_attribute (process
			(ptrace signal signull sigkill sigstop)))
		(allow subj_type_attribute adm_subj_type_attribute (process
			(sigchld)))
		(call ps_subj_pattern (adm_subj_type_attribute
			subj_type_attribute))

		(call subj.ptrace_subj_type (adm_subj_type_attribute))

		(call file.rw_config_dirs (adm_subj_type_attribute))
		(call file.rw_var_lib_dirs (adm_subj_type_attribute))

		(allow adm_subj_type_attribute obj_type_attribute
			manage_file_perms)
		(allow adm_subj_type_attribute obj_type_attribute
			manage_dir_perms)
		(allow adm_subj_type_attribute obj_type_attribute
			manage_sock_file_perms)

		(allow adm_subj_type_attribute obj_type_attribute
			relabel_file_perms)
		(allow adm_subj_type_attribute obj_type_attribute
			relabel_dir_perms)
		(allow adm_subj_type_attribute obj_type_attribute
			relabel_sock_file_perms)

		(blockinherit exec_blk)

		(blockinherit auto_subj_type_transition_blk)

		(blockinherit subj.send_signal_blk)

		(blockinherit file.read_config_files_blk)
		(blockinherit file.manage_config_files_blk)
		(blockinherit file.relabel_config_files_blk)

		(blockinherit file.search_var_lib_blk)
		(blockinherit file.list_var_lib_blk)
		(blockinherit file.read_var_lib_files_blk)
		(blockinherit file.read_var_lib_lnk_files_blk)
		(blockinherit file.read_var_lib_blk)
		(blockinherit file.manage_var_lib_blk)
		(blockinherit file.relabel_var_lib_blk)

		(macro stream_connect ((type ARG1))
			(call file.search_var_lib (ARG1))
			(call stream_connect_pattern (ARG1 var_lib_file
				var_lib_file subj)))

		(macro var_lib_obj_type_transition_var_lib ((type ARG1))
			(call file.var_lib_obj_type_transition (ARG1
				var_lib_file dir "*")))

		(blockinherit net.tcp_connect_port_blk)
		(blockinherit net.tcp_bind_port_blk)
		(blockinherit net.udp_bind_port_blk)

		(macro adm ((type ARG1)(role ARG2))
			(typeattributeset memcached.adm_subj_type_attribute
				ARG1)
			(optional memcached_adm_optional_sd
				(call sd.daemon_adm_subj_type (ARG1)))
			(optional memcached_adm_optional_sd_askpwd
				(call sd_askpwd_agent.run (ARG1 ARG2))))))

(in memcached
	(blockinherit net.tcp_connect_all_ports_blk)
	(blockinherit net.tcp_bind_all_ports_blk)
	(blockinherit net.udp_bind_all_ports_blk)

	(blockinherit file.read_all_config_files_blk)
	(blockinherit file.manage_all_config_files_blk)
	(blockinherit file.relabel_all_config_files_blk)

	(blockinherit file.search_all_var_lib_blk)
	(blockinherit file.list_all_var_lib_blk)
	(blockinherit file.read_all_var_lib_files_blk)
	(blockinherit file.read_all_var_lib_lnk_files_blk)
	(blockinherit file.read_all_var_lib_blk)
	(blockinherit file.manage_all_var_lib_blk)
	(blockinherit file.relabel_all_var_lib_blk)

	(macro stream_connect_all_subj ((type ARG1))
		(call file.search_var_lib (ARG1))
		(call stream_connect_pattern (ARG1 var_lib_obj_type_attribute
			var_lib_obj_type_attribute subj_type_attribute)))

	(macro adm ((type ARG1)(role ARG2))
		(typeattributeset adm_subj_type_attribute ARG1)
		(optional memcached_adm_optional_sd
			(call sd.daemon_adm_subj_type (ARG1)))
		(optional memcached_adm_optional_sd_askpwd
			(call sd_askpwd_agent.run (ARG1 ARG2)))))

(in memcachedtool
	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit run_blk)

	(blockinherit subj.send_signal_blk))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Policy
;

(block memcached
	(typeattribute adm_subj_type_attribute)

	(typeattribute subj_type_attribute)

	(typeattribute obj_type_attribute)
	(typeattribute config_obj_type_attribute)
	(typeattribute port_obj_type_attribute)
	(typeattribute var_lib_obj_type_attribute)
	(typeattribute unit_obj_type_attribute)

	(blockinherit memcached_blk)

	(allow subj_type_attribute self (capability (setgid setuid)))
	(allow subj_type_attribute self (process (setrlimit)))
	(allow subj_type_attribute self rw_fifo_file_perms)
	(allow subj_type_attribute self (tcp_socket (listen accept)))
	(allow subj_type_attribute self (unix_stream_socket (listen accept)))

	(call net.tcp_bind_generic_node (subj_type_attribute))
	(call net.udp_bind_generic_node (subj_type_attribute))

	(call nss.client_subj_type (subj_type_attribute))

	(call memcache.tcp_bind_port (subj_type_attribute))
	(call memcache.udp_bind_port (subj_type_attribute)))

(block memcachedtool
	(roleattribute role_attribute)

	(blockinherit app.application_blk)

	(roletype role_attribute subj)

	(call cmd.mmap (subj))

	(call dev.read_urandom (subj))

	(call file.read_data_files (subj))

	(call locale.read (subj))

	(call memcache.tcp_connect_port (subj))

	(call memcached.tcp_connect_all_ports (subj))

	(call nss.client_subj_type (subj)))

(allow memcached.adm_subj_type_attribute memcached.subj_type_attribute
	(process (ptrace signal signull sigkill sigstop)))
(allow memcached.subj_type_attribute memcached.adm_subj_type_attribute
	(process (sigchld)))
(call ps_subj_pattern (memcached.adm_subj_type_attribute
	memcached.subj_type_attribute))

(call subj.ptrace_subj_type (memcached.adm_subj_type_attribute))

(call file.rw_config_dirs (memcached.adm_subj_type_attribute))
(call file.rw_var_lib_dirs (memcached.adm_subj_type_attribute))

(allow memcached.adm_subj_type_attribute memcached.obj_type_attribute
	manage_file_perms)
(allow memcached.adm_subj_type_attribute memcached.obj_type_attribute
	manage_dir_perms)
(allow memcached.adm_subj_type_attribute memcached.obj_type_attribute
	manage_sock_file_perms)

(allow memcached.adm_subj_type_attribute memcached.obj_type_attribute
	relabel_file_perms)
(allow memcached.adm_subj_type_attribute memcached.obj_type_attribute
	relabel_dir_perms)
(allow memcached.adm_subj_type_attribute memcached.obj_type_attribute
	relabel_sock_file_perms)

(optional memcached_adm_subj_type_optional_sd
	(allow memcached.adm_subj_type_attribute
		memcached.unit_obj_type_attribute (service (stop status
			disable enable reload start))))
