;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Contexts
;

(in mount
	(filecon "/usr/bin/mount.*" file cmd_file_context)
	(filecon "/usr/bin/umount.*" file cmd_file_context)
	(filecon "/usr/sbin/mount.*" file cmd_file_context)
	(filecon "/usr/sbin/umount.*" file cmd_file_context)
	(filecon "/var/run/mount(/.*)?" any runtime_file_context))

(in mount_any_file
	(genfscon "selinuxfs" "/booleans/mount_any_file" bool_obj_context))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Macros
;

(in mount
	(blockinherit exec_blk)

	(blockinherit auto_subj_type_transition_blk)

	(blockinherit run_blk)

	(blockinherit subj.send_signal_blk)

	(blockinherit file.search_runtime_blk)
	(blockinherit file.list_runtime_blk)
	(blockinherit file.read_runtime_files_blk)
	(blockinherit file.manage_runtime_files_blk)
	(blockinherit file.read_runtime_lnk_files_blk)
	(blockinherit file.read_runtime_blk)
	(blockinherit file.manage_runtime_blk)
	(blockinherit file.relabel_runtime_blk)

	(macro rw_runtime_files ((type ARG1))
		(call file.search_runtime (ARG1))
		(call rw_files_pattern (ARG1 runtime_file runtime_file)))

	(macro manage_runtime_dirs ((type ARG1))
		(call file.rw_runtime_dirs (ARG1))
		(call manage_dirs_pattern (ARG1 runtime_file runtime_file)))

	(macro runtime_obj_type_transition_runtime ((type ARG1))
		(call file.runtime_obj_type_transition (ARG1 runtime_file dir
			"*")))

	(blockinherit subj.use_fd_blk)

	(macro set_any_file_boolean ((type ARG1))
		(call sec.set_spec_boolean (ARG1 mount_any_file.bool))
		(optional mount_set_any_file_boolean_optional_seutil
		(call setsebool.exec (ARG1)))))

;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Policy
;

(boolean mount_any_file false)

(block mount
	(roleattribute role_attribute)

	(blockinherit app.application_blk)

	(roleattributeset role_attribute sys.role)

	(roletype role_attribute subj)

	(blockinherit file.runtime_obj_blk)

	(call manage_runtime (subj))
	(call runtime_obj_type_transition_runtime (subj))

	(allow subj self (capability (dac_override sys_admin fowner)))

	(call sys.dontaudit_audit_access_mountpoint_dirs (subj))
	(call sys.dontaudit_audit_access_unlabeled_dirs (subj))
	(call sys.dontaudit_setattr_unlabeled_dirs (subj))
	(call sys.setattr_mountpoint_dirs (subj))
	(call sys.list_mountpoints (subj))
	(call sys.mounton_mountpoint_dirs (subj))
	(call sys.request_load_module (subj))
	(call sys.setsched (subj))

	(call dev.rw_loop_control (subj))

	(call file.read_config_files (subj))

	(call fs.getattr_all_fs (subj))
	(call fs.mount_all_fs (subj))
	(call fs.read_debugfs (subj))
	(call fs.read_devtmpfs_lnk_files (subj))
	(call fs.read_sysfs (subj))
	(call fs.remount_all_fs (subj))
	(call fs.unmount_all_fs (subj))

	(call storage.rw_all (subj))

	(call fstab.read (subj))
	(call locale.read (subj))

	(booleanif (mount_any_file) (true
		(call file.rw_all_files_except (subj))
		(call file.mounton_all_except (subj))))

	(optional mount_optional_sd_machined
		(call sd_machined.rw_var_lib_files (subj)))

	(optional mount_optional_sd
		(call sd.daemon (subj cmd_file))))

(block mount_any_file
	(blockinherit sec.bool_obj_blk))
